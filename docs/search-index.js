crystal_doc_search_index_callback({"repository_name":"crystalizer","body":"# Crystalizer\n\n[![CI](https://github.com/j8r/crystalizer/workflows/CI/badge.svg)](https://github.com/j8r/crystalizer/actions?query=workflow%3ACI)\n[![Documentation](https://github.com/j8r/crystalizer/workflows/Documentation/badge.svg)](https://j8r.github.io/crystalizer)\n[![ISC](https://img.shields.io/badge/License-ISC-blue.svg?style=flat-square)](https://en.wikipedia.org/wiki/ISC_license)\n\n[De]serialize any Crystal object - out of the box. Supports JSON, YAML and Byte format.\n\n## Features\n\n- [De]serialize anything, \"out-of-the-box\"\n- Advanced serialization with annotations, but **not required**\n- Shared annotations for all formats (JSON, YAML...)\n\nImplementation bonus: no monkey patching involved :) (no method pollution on objects)\n\n## Installation\n\nAdd the dependency to your `shard.yml`:\n\n```yaml\ndependencies:\n  crystalizer:\n    github: j8r/crystalizer\n```\n\n## Documentation\n\nhttps://j8r.github.io/crystalizer\n\n## Usage\n\n### Basic\n\n```crystal\nrequire \"crystalizer/json\"\nrequire \"crystalizer/yaml\"\n\nstruct Point\n  getter x : Int32\n  @[Crystalizer::Field(key: \"Y\")]\n  getter y : String\n\n  def initialize(@x, @y)\n  end\nend\n\npoint = Point.new 1, \"a\"\n\n{Crystalizer::YAML, Crystalizer::JSON}.each do |format|\n  puts format\n  string = format.serialize point\n  puts string\n  puts format.deserialize string, to: Point\nend\n```\n\nResult:\n```\nCrystalizer::YAML\n---\nx: 1\nY: a\nPoint(@x=1, @y=\"a\")\nCrystalizer::JSON\n{\n  \"x\": 1,\n  \"Y\": \"a\"\n}\nPoint(@x=1, @y=\"a\")\n```\n\n### Any\n\nParsing any type, and converting to JSON/YAML.\n\n```cr\nrequire \"crystalizer/json\"\nrequire \"crystalizer/yaml\"\n\nyaml_string = <<-E\none: 1\ntwo: 2\nsub:\n  ary:\n  - one\n  - 2\nE\n\nyaml_any = Crystalizer::YAML.parse yaml_string\nputs yaml_any\n\njson_string = Crystalizer::JSON.serialize yaml_any\nputs json_string\n\njson_any = Crystalizer::JSON.parse json_string\nputs Crystalizer::YAML.serialize json_any\n```\n\nResult:\n```yaml\n{\"one\" => 1, \"two\" => 2, \"sub\" => {\"ary\" => [\"one\", 2]}}\n{\n  \"one\": 1,\n  \"two\": 2,\n  \"sub\": {\n    \"ary\": [\n      \"one\",\n      2\n    ]\n  }\n}\n---\none: 1\ntwo: 2\nsub:\n  ary:\n  - one\n  - 2\n```\n\n### User-defined serialization\n\nAllows to define custom serialization and deserialization for a given type.\n\n```crystal\nstruct MyType\n  include Crystalizer::Type\n\n  def initialize(@i : Int32)\n  end\n\n  def self.deserialize(deserializer : Crystalizer::Deserializer)\n    new deserializer.deserialize to: Int32\n  end\n\n  def serialize(serializer : Crystalizer::Serializer) : Nil\n    serializer.serialize @i\n  end\nend\n```\n\n### Note\n\nAnnotations are similar to the stdlib's `Serializable`, but all features are not yet fully implemented.\n\n## License\n\nCopyright (c) 2020-2023 Julien Reichardt - ISC License\n","program":{"html_id":"crystalizer/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"crystalizer","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"crystalizer/Crystalizer","path":"Crystalizer.html","kind":"module","full_name":"Crystalizer","name":"Crystalizer","abstract":false,"locations":[{"filename":"src/any.cr","line_number":1,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/any.cr#L1"},{"filename":"src/crystalizer.cr","line_number":5,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/crystalizer.cr#L5"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"types":[{"html_id":"crystalizer/Crystalizer/Any","path":"Crystalizer/Any.html","kind":"module","full_name":"Crystalizer::Any","name":"Any","abstract":false,"locations":[{"filename":"src/any.cr","line_number":1,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/any.cr#L1"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"crystalizer/Crystalizer/JSON/Any","kind":"struct","full_name":"Crystalizer::JSON::Any","name":"Any"},{"html_id":"crystalizer/Crystalizer/YAML/Any","kind":"struct","full_name":"Crystalizer::YAML::Any","name":"Any"}],"namespace":{"html_id":"crystalizer/Crystalizer","kind":"module","full_name":"Crystalizer","name":"Crystalizer"},"instance_methods":[{"html_id":"==(other:Any):Bool-instance-method","name":"==","doc":"Returns `true` if both `self` and *other*'s raw object are equal.","summary":"<p>Returns <code>true</code> if both <code>self</code> and <em>other</em>'s raw object are equal.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Any"}],"args_string":"(other : Any) : Bool","args_html":"(other : <a href=\"../Crystalizer/Any.html\">Any</a>) : Bool","location":{"filename":"src/any.cr","line_number":109,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/any.cr#L109"},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"Any"}],"return_type":"Bool","visibility":"Public","body":"raw == other.raw"}},{"html_id":"[](index:Int)-instance-method","name":"[]","doc":"Assumes the underlying value is an `Indexable` or a `Hash`, and returns the element\nat the given index.\n\nRaises if the underlying value is not an `Indexable` or a `Hash`.","summary":"<p>Assumes the underlying value is an <code>Indexable</code> or a <code>Hash</code>, and returns the element at the given index.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","args_html":"(index : Int)","location":{"filename":"src/any.cr","line_number":37,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/any.cr#L37"},"def":{"name":"[]","args":[{"name":"index","external_name":"index","restriction":"Int"}],"visibility":"Public","body":"cast_to_hash_or_indexable[index]"}},{"html_id":"[](key)-instance-method","name":"[]","doc":"Assumes the underlying value is a `Hash` and returns the element\nwith the given key.\n\nRaises if the underlying value is not a `Hash`.","summary":"<p>Assumes the underlying value is a <code>Hash</code> and returns the element with the given key.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/any.cr","line_number":53,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/any.cr#L53"},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":"self[key]? || (raise(Error.new(\"Key not found: #{key}\")))"}},{"html_id":"[]?(index:Int)-instance-method","name":"[]?","doc":"Assumes the underlying value is an `Indexable` and returns the element\nat the given index, or `nil` if out of bounds.\n\nRaises if the underlying value is not an `Indexable`.","summary":"<p>Assumes the underlying value is an <code>Indexable</code> and returns the element at the given index, or <code>nil</code> if out of bounds.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","args_html":"(index : Int)","location":{"filename":"src/any.cr","line_number":45,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/any.cr#L45"},"def":{"name":"[]?","args":[{"name":"index","external_name":"index","restriction":"Int"}],"visibility":"Public","body":"cast_to_hash_or_indexable[index]?"}},{"html_id":"[]?(key)-instance-method","name":"[]?","doc":"Assumes the underlying value is a `Hash` and returns the element\nwith the given key, or `nil` if the key is not present.\n\nRaises if the underlying value is not a `Hash`.","summary":"<p>Assumes the underlying value is a <code>Hash</code> and returns the element with the given key, or <code>nil</code> if the key is not present.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/any.cr","line_number":61,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/any.cr#L61"},"def":{"name":"[]?","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":"h = to(Hash)\nif (typeof(h.values[0])) == Crystalizer::Any\n  if key_value = h.find do |__arg0|\n    __arg0.first.raw == key\n  end\n    key_value.last\n  end\nelse\n  h[key]?\nend\n"}},{"html_id":"clone:Any-instance-method","name":"clone","doc":"Returns a new `Any` instance with the `raw` value `clone`ed.","summary":"<p>Returns a new <code><a href=\"../Crystalizer/Any.html\">Any</a></code> instance with the <code><a href=\"../Crystalizer/Any.html#raw-instance-method\">#raw</a></code> value <code><a href=\"../Crystalizer/Any.html#clone%3AAny-instance-method\">#clone</a></code>ed.</p>","abstract":false,"location":{"filename":"src/any.cr","line_number":122,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/any.cr#L122"},"def":{"name":"clone","return_type":"Any","visibility":"Public","body":"new(@raw.clone)"}},{"html_id":"dig(key_or_index,*subkeys)-instance-method","name":"dig","doc":"Traverses the depth of a structure and returns the value, otherwise raises.","summary":"<p>Traverses the depth of a structure and returns the value, otherwise raises.</p>","abstract":false,"args":[{"name":"key_or_index","external_name":"key_or_index","restriction":""},{"name":"subkeys","external_name":"subkeys","restriction":""}],"args_string":"(key_or_index, *subkeys)","args_html":"(key_or_index, *subkeys)","location":{"filename":"src/any.cr","line_number":84,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/any.cr#L84"},"def":{"name":"dig","args":[{"name":"key_or_index","external_name":"key_or_index","restriction":""},{"name":"subkeys","external_name":"subkeys","restriction":""}],"splat_index":1,"visibility":"Public","body":"self[key_or_index].dig(*subkeys)"}},{"html_id":"dig?(key,*subkeys)-instance-method","name":"dig?","doc":"Traverses the depth of a structure and returns the value.\nReturns `nil` if not found.","summary":"<p>Traverses the depth of a structure and returns the value.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"subkeys","external_name":"subkeys","restriction":""}],"args_string":"(key, *subkeys)","args_html":"(key, *subkeys)","location":{"filename":"src/any.cr","line_number":74,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/any.cr#L74"},"def":{"name":"dig?","args":[{"name":"key","external_name":"key","restriction":""},{"name":"subkeys","external_name":"subkeys","restriction":""}],"splat_index":1,"visibility":"Public","body":"self[key]?.try(&.dig?(*subkeys))"}},{"html_id":"dup:Any-instance-method","name":"dup","doc":"Returns a new `Any` instance with the `raw` value `dup`ed.","summary":"<p>Returns a new <code><a href=\"../Crystalizer/Any.html\">Any</a></code> instance with the <code><a href=\"../Crystalizer/Any.html#raw-instance-method\">#raw</a></code> value <code><a href=\"../Crystalizer/Any.html#dup%3AAny-instance-method\">#dup</a></code>ed.</p>","abstract":false,"location":{"filename":"src/any.cr","line_number":117,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/any.cr#L117"},"def":{"name":"dup","return_type":"Any","visibility":"Public","body":"new(@raw.dup)"}},{"html_id":"hash(hasher)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"hasher","external_name":"hasher","restriction":""}],"args_string":"(hasher)","args_html":"(hasher)","location":{"filename":"src/any.cr","line_number":114,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/any.cr#L114"},"def":{"name":"hash","args":[{"name":"hasher","external_name":"hasher","restriction":""}],"visibility":"Public","body":"hasher = raw.hash(hasher)\nhasher\n"}},{"html_id":"raw-instance-method","name":"raw","doc":"Returns the raw underlying value.","summary":"<p>Returns the raw underlying value.</p>","abstract":true,"location":{"filename":"src/any.cr","line_number":6,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/any.cr#L6"},"def":{"name":"raw","visibility":"Public","body":""}},{"html_id":"size:Int-instance-method","name":"size","abstract":false,"location":{"filename":"src/any.cr","line_number":18,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/any.cr#L18"},"def":{"name":"size","return_type":"Int","visibility":"Public","body":"cast_to_hash_or_indexable.size"}},{"html_id":"to(type:T.class):TforallT-instance-method","name":"to","doc":"Casts the underlying value to `T`.","summary":"<p>Casts the underlying value to <code>T</code>.</p>","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"T.class"}],"args_string":"(type : T.class) : T forall T","args_html":"(type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : T forall T","location":{"filename":"src/any.cr","line_number":9,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/any.cr#L9"},"def":{"name":"to","args":[{"name":"type","external_name":"type","restriction":"T.class"}],"return_type":"T","visibility":"Public","body":"(to?(type)) || (raise(Error.new(\"Expected #{T}, not #{@raw.class}\")))"}},{"html_id":"to?(type:T.class)forallT-instance-method","name":"to?","doc":"Casts the underlying value to `T`, or return nil if not possible.","summary":"<p>Casts the underlying value to <code>T</code>, or return nil if not possible.</p>","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"T.class"}],"args_string":"(type : T.class) forall T","args_html":"(type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) forall T","location":{"filename":"src/any.cr","line_number":14,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/any.cr#L14"},"def":{"name":"to?","args":[{"name":"type","external_name":"type","restriction":"T.class"}],"visibility":"Public","body":"@raw.as?(T)"}}],"types":[{"html_id":"crystalizer/Crystalizer/Any/Error","path":"Crystalizer/Any/Error.html","kind":"class","full_name":"Crystalizer::Any::Error","name":"Error","abstract":false,"superclass":{"html_id":"crystalizer/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crystalizer/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crystalizer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalizer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/any.cr","line_number":2,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/any.cr#L2"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crystalizer/Crystalizer/Any","kind":"module","full_name":"Crystalizer::Any","name":"Any"}}]},{"html_id":"crystalizer/Crystalizer/ByteFormat","path":"Crystalizer/ByteFormat.html","kind":"struct","full_name":"Crystalizer::ByteFormat","name":"ByteFormat","abstract":false,"superclass":{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crystalizer/Crystalizer/Serializer","kind":"module","full_name":"Crystalizer::Serializer","name":"Serializer"},{"html_id":"crystalizer/Crystalizer/Deserializer","kind":"module","full_name":"Crystalizer::Deserializer","name":"Deserializer"},{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crystalizer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crystalizer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/byte_format.cr","line_number":9,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format.cr#L9"},{"filename":"src/byte_format/deserializer.cr","line_number":1,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/deserializer.cr#L1"},{"filename":"src/byte_format/serializer.cr","line_number":1,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/serializer.cr#L1"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"crystalizer/Crystalizer/Deserializer","kind":"module","full_name":"Crystalizer::Deserializer","name":"Deserializer"},{"html_id":"crystalizer/Crystalizer/Serializer","kind":"module","full_name":"Crystalizer::Serializer","name":"Serializer"}],"extended_modules":[{"html_id":"crystalizer/Crystalizer/Format","kind":"module","full_name":"Crystalizer::Format","name":"Format"}],"namespace":{"html_id":"crystalizer/Crystalizer","kind":"module","full_name":"Crystalizer","name":"Crystalizer"},"doc":"Byte format, as implemented in the stdlib: https://crystal-lang.org/api/master/IO/ByteFormat.html.\n\nImportant note: bytes representation of dynamic data structures like `Array` and `Hash` have no end delimiter.\nOn an object, only one of it can be present as the last instance variable, otherwise they will collide with the next ones - having no delimiter to separate them.\n\nUnions are also not supported.","summary":"<p>Byte format, as implemented in the stdlib: https://crystal-lang.org/api/master/IO/ByteFormat.html.</p>","class_methods":[{"html_id":"deserialize(bytes:Bytes,totype:T.class):TforallT-class-method","name":"deserialize","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"type","external_name":"to","restriction":"T.class"}],"args_string":"(bytes : Bytes, to type : T.class) : T forall T","args_html":"(bytes : Bytes, to type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : T forall T","location":{"filename":"src/byte_format/deserializer.cr","line_number":4,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/deserializer.cr#L4"},"def":{"name":"deserialize","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"type","external_name":"to","restriction":"T.class"}],"return_type":"T","visibility":"Public","body":"(new(IO::Memory.new(bytes))).deserialize(to: type)"}},{"html_id":"deserialize(io:IO,totype:T.class):TforallT-class-method","name":"deserialize","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"type","external_name":"to","restriction":"T.class"}],"args_string":"(io : IO, to type : T.class) : T forall T","args_html":"(io : IO, to type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : T forall T","location":{"filename":"src/byte_format/deserializer.cr","line_number":8,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/deserializer.cr#L8"},"def":{"name":"deserialize","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"type","external_name":"to","restriction":"T.class"}],"return_type":"T","visibility":"Public","body":"(new(io)).deserialize(to: type)"}},{"html_id":"serialize(io:IO,object):Nil-class-method","name":"serialize","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"object","external_name":"object","restriction":""}],"args_string":"(io : IO, object) : Nil","args_html":"(io : IO, object) : Nil","location":{"filename":"src/byte_format/serializer.cr","line_number":10,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/serializer.cr#L10"},"def":{"name":"serialize","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"object","external_name":"object","restriction":""}],"return_type":"Nil","visibility":"Public","body":"(new(io)).serialize(object)"}},{"html_id":"serialize(object):Bytes-class-method","name":"serialize","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : Bytes","args_html":"(object) : Bytes","location":{"filename":"src/byte_format/serializer.cr","line_number":4,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/serializer.cr#L4"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"Bytes","visibility":"Public","body":"io = IO::Memory.new\n(new(io)).serialize(object)\nio.to_slice\n"}},{"html_id":"string_delimiter:Char|Nil-class-method","name":"string_delimiter","doc":"Byte to delimit the end of a `String`.","summary":"<p>Byte to delimit the end of a <code>String</code>.</p>","abstract":false,"location":{"filename":"src/byte_format.cr","line_number":20,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format.cr#L20"},"def":{"name":"string_delimiter","return_type":"Char | ::Nil","visibility":"Public","body":"@@string_delimiter"}},{"html_id":"string_delimiter=(string_delimiter:Char|Nil)-class-method","name":"string_delimiter=","doc":"Byte to delimit the end of a `String`.","summary":"<p>Byte to delimit the end of a <code>String</code>.</p>","abstract":false,"args":[{"name":"string_delimiter","external_name":"string_delimiter","restriction":"Char | ::Nil"}],"args_string":"(string_delimiter : Char | Nil)","args_html":"(string_delimiter : Char | Nil)","location":{"filename":"src/byte_format.cr","line_number":20,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format.cr#L20"},"def":{"name":"string_delimiter=","args":[{"name":"string_delimiter","external_name":"string_delimiter","restriction":"Char | ::Nil"}],"visibility":"Public","body":"@@string_delimiter = string_delimiter"}}],"constructors":[{"html_id":"new(io:IO=IO::Memory.new,format:IO::ByteFormat=IO::ByteFormat::SystemEndian,string_delimiter:Char|Nil=@@string_delimiter)-class-method","name":"new","abstract":false,"args":[{"name":"io","default_value":"IO::Memory.new","external_name":"io","restriction":"IO"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"},{"name":"string_delimiter","default_value":"@@string_delimiter","external_name":"string_delimiter","restriction":"Char | ::Nil"}],"args_string":"(io : IO = IO::Memory.new, format : IO::ByteFormat = IO::ByteFormat::SystemEndian, string_delimiter : Char | Nil = @@string_delimiter)","args_html":"(io : IO = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">Memory</span>.new, format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>, string_delimiter : Char | Nil = @@string_delimiter)","location":{"filename":"src/byte_format.cr","line_number":22,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format.cr#L22"},"def":{"name":"new","args":[{"name":"io","default_value":"IO::Memory.new","external_name":"io","restriction":"IO"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"},{"name":"string_delimiter","default_value":"@@string_delimiter","external_name":"string_delimiter","restriction":"Char | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(io, format, string_delimiter)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"deserialize(totype:String.class,bytesize:Range(Int32|Nil,Int32|Nil))-instance-method","name":"deserialize","doc":"Deserializes a `String` from reading from the `io`, delimited by a trailing `string_delimiter`.","summary":"<p>Deserializes a <code>String</code> from reading from the <code><a href=\"../Crystalizer/ByteFormat.html#io%3AIO-instance-method\">#io</a></code>, delimited by a trailing <code><a href=\"../Crystalizer/ByteFormat.html#string_delimiter%3AChar%3F-instance-method\">#string_delimiter</a></code>.</p>","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"String.class"},{"name":"bytesize","external_name":"bytesize","restriction":"Range(Int32 | ::Nil, Int32 | ::Nil)"}],"args_string":"(to type : String.class, bytesize : Range(Int32 | Nil, Int32 | Nil))","args_html":"(to type : <span class=\"t\">String</span>.<span class=\"k\">class</span>, bytesize : Range(Int32 | Nil, Int32 | Nil))","location":{"filename":"src/byte_format/deserializer.cr","line_number":89,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/deserializer.cr#L89"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"String.class"},{"name":"bytesize","external_name":"bytesize","restriction":"Range(Int32 | ::Nil, Int32 | ::Nil)"}],"visibility":"Public","body":"string = if max_bytesize = bytesize.end\n  (@io.gets(@string_delimiter.as(Char), max_bytesize + 1, true)) || \"\"\nelse\n  deserialize(type)\nend\nif bytesize.includes?(string.bytesize)\nelse\n  raise(Error.new(\"String bytesize not in range: #{bytesize}\"))\nend\nstring\n"}},{"html_id":"deserialize(totype:String.class,bytesize:Int)-instance-method","name":"deserialize","doc":"Deserializes a `String` from reading from the `io`. String is exactly `bytesize` bytes with no trailing `@string_delimiter`.","summary":"<p>Deserializes a <code>String</code> from reading from the <code><a href=\"../Crystalizer/ByteFormat.html#io%3AIO-instance-method\">#io</a></code>.</p>","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"String.class"},{"name":"bytesize","external_name":"bytesize","restriction":"Int"}],"args_string":"(to type : String.class, bytesize : Int)","args_html":"(to type : <span class=\"t\">String</span>.<span class=\"k\">class</span>, bytesize : Int)","location":{"filename":"src/byte_format/deserializer.cr","line_number":108,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/deserializer.cr#L108"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"String.class"},{"name":"bytesize","external_name":"bytesize","restriction":"Int"}],"visibility":"Public","body":"@io.read_string(bytesize)"}},{"html_id":"deserialize(totype:Crystalizer::Type.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Crystalizer::Type.class"}],"args_string":"(to type : Crystalizer::Type.class)","args_html":"(to type : <span class=\"t\">Crystalizer</span><span class=\"t\">::</span><span class=\"t\">Type</span>.<span class=\"k\">class</span>)","location":{"filename":"src/byte_format/deserializer.cr","line_number":2,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/deserializer.cr#L2"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Crystalizer::Type.class"}],"visibility":"Public","body":"type.deserialize(self)"}},{"html_id":"deserialize(totype:Array.class|Deque.class|Set.class)-instance-method","name":"deserialize","doc":"Requires the `@io` to be an `IO::Memory`.","summary":"<p>Requires the <code>@io</code> to be an <code>IO::Memory</code>.</p>","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Array.class | Deque.class | Set.class"}],"args_string":"(to type : Array.class | Deque.class | Set.class)","args_html":"(to type : <span class=\"t\">Array</span>.<span class=\"k\">class</span> | <span class=\"t\">Deque</span>.<span class=\"k\">class</span> | <span class=\"t\">Set</span>.<span class=\"k\">class</span>)","location":{"filename":"src/byte_format/deserializer.cr","line_number":22,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/deserializer.cr#L22"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Array.class | Deque.class | Set.class"}],"visibility":"Public","body":"array = type.new\nvalue_class = typeof(array.first)\nyield_until_empty(type) do\n  array << (deserialize(value_class))\nend\narray\n"}},{"html_id":"deserialize(totype:Bool.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Bool.class"}],"args_string":"(to type : Bool.class)","args_html":"(to type : <span class=\"t\">Bool</span>.<span class=\"k\">class</span>)","location":{"filename":"src/byte_format/deserializer.cr","line_number":31,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/deserializer.cr#L31"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Bool.class"}],"visibility":"Public","body":"case byte = @io.read_byte\nwhen 0_u8\n  false\nwhen 1_u8\n  true\nelse\n  raise(Error.new(\"Invalid boolean byte different from 0 or 1: #{byte}\"))\nend"}},{"html_id":"deserialize(totype:Bytes.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Bytes.class"}],"args_string":"(to type : Bytes.class)","args_html":"(to type : <span class=\"t\">Bytes</span>.<span class=\"k\">class</span>)","location":{"filename":"src/byte_format/deserializer.cr","line_number":39,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/deserializer.cr#L39"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Bytes.class"}],"visibility":"Public","body":"@io.gets_to_end.to_slice"}},{"html_id":"deserialize(totype:Enum.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Enum.class"}],"args_string":"(to type : Enum.class)","args_html":"(to type : <span class=\"t\">Enum</span>.<span class=\"k\">class</span>)","location":{"filename":"src/byte_format/deserializer.cr","line_number":43,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/deserializer.cr#L43"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Enum.class"}],"visibility":"Public","body":"type.from_value(deserialize(typeof(type.values.first.value)))"}},{"html_id":"deserialize(totype:Hash.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Hash.class"}],"args_string":"(to type : Hash.class)","args_html":"(to type : <span class=\"t\">Hash</span>.<span class=\"k\">class</span>)","location":{"filename":"src/byte_format/deserializer.cr","line_number":47,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/deserializer.cr#L47"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Hash.class"}],"visibility":"Public","body":"hash = type.new\nkey_class, value_class = typeof(hash.first)\nyield_until_empty(type) do\n  key = deserialize(key_class)\n  value = deserialize(value_class)\n  hash[key] = value\nend\nhash\n"}},{"html_id":"deserialize(totype:NamedTuple.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"NamedTuple.class"}],"args_string":"(to type : NamedTuple.class)","args_html":"(to type : <span class=\"t\">NamedTuple</span>.<span class=\"k\">class</span>)","location":{"filename":"src/byte_format/deserializer.cr","line_number":59,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/deserializer.cr#L59"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"NamedTuple.class"}],"visibility":"Public","body":"deserializer = Deserializer::NamedTupleObject.new(type)\ndeserializer.size.times do\n  str = deserialize(String)\n  deserializer.set_value(str) do |value_type|\n    deserialize(value_type)\n  end\nend\ndeserializer.named_tuple\n"}},{"html_id":"deserialize(totype:Number::Primitive.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Number::Primitive.class"}],"args_string":"(to type : Number::Primitive.class)","args_html":"(to type : <span class=\"t\">Number</span><span class=\"t\">::</span><span class=\"t\">Primitive</span>.<span class=\"k\">class</span>)","location":{"filename":"src/byte_format/deserializer.cr","line_number":71,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/deserializer.cr#L71"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Number::Primitive.class"}],"visibility":"Public","body":"@io.read_bytes(type, @format)"}},{"html_id":"deserialize(totype:Path.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Path.class"}],"args_string":"(to type : Path.class)","args_html":"(to type : <span class=\"t\">Path</span>.<span class=\"k\">class</span>)","location":{"filename":"src/byte_format/deserializer.cr","line_number":75,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/deserializer.cr#L75"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Path.class"}],"visibility":"Public","body":"Path.new(deserialize(String, bytesize))"}},{"html_id":"deserialize(totype:String.class)-instance-method","name":"deserialize","doc":"Deserializes a `String` from reading from the `io`, delimited by a trailing `string_delimiter`.","summary":"<p>Deserializes a <code>String</code> from reading from the <code><a href=\"../Crystalizer/ByteFormat.html#io%3AIO-instance-method\">#io</a></code>, delimited by a trailing <code><a href=\"../Crystalizer/ByteFormat.html#string_delimiter%3AChar%3F-instance-method\">#string_delimiter</a></code>.</p>","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"String.class"}],"args_string":"(to type : String.class)","args_html":"(to type : <span class=\"t\">String</span>.<span class=\"k\">class</span>)","location":{"filename":"src/byte_format/deserializer.cr","line_number":80,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/deserializer.cr#L80"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"String.class"}],"visibility":"Public","body":"if string_delimiter = @string_delimiter\n  (@io.gets(string_delimiter, true)) || \"\"\nelse\n  @io.gets_to_end\nend"}},{"html_id":"deserialize(totype:Tuple.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Tuple.class"}],"args_string":"(to type : Tuple.class)","args_html":"(to type : <span class=\"t\">Tuple</span>.<span class=\"k\">class</span>)","location":{"filename":"src/byte_format/deserializer.cr","line_number":112,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/deserializer.cr#L112"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Tuple.class"}],"visibility":"Public","body":"Crystalizer.create_tuple(type) do |value_type|\n  deserialize(value_type)\nend"}},{"html_id":"deserialize(totype:T.class):TforallT-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"T.class"}],"args_string":"(to type : T.class) : T forall T","args_html":"(to type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : T forall T","location":{"filename":"src/byte_format/deserializer.cr","line_number":124,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/deserializer.cr#L124"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"T.class"}],"return_type":"T","visibility":"Public","body":"{% if T.union_types.size > 1 %}\n      {% raise(\"Crystalizer::ByteFormat does not support unions; the protocol requires unambiguous field types.\") %}\n    {% else %}{% if ((T < Array || T < Deque) || T < Set) || T < Hash %}\n      deserialize type\n    {% else %}\n      deserializer = Deserializer::NonSelfDescribingObject.new type\n      deserializer.set_each_ivar do |variable|\n        if (variable_type = variable.type).is_a?(String.class) && (bytesize = variable.annotations.try &.[:bytesize])\n          deserialize String, bytesize: bytesize\n        else\n          de_unionize variable.type\n        end\n      end\n      deserializer.object_instance\n    {% end %}{% end %}"}},{"html_id":"format:IO::ByteFormat-instance-method","name":"format","abstract":false,"location":{"filename":"src/byte_format.cr","line_number":16,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format.cr#L16"},"def":{"name":"format","return_type":"IO::ByteFormat","visibility":"Public","body":"@format"}},{"html_id":"format=(format:IO::ByteFormat)-instance-method","name":"format=","abstract":false,"args":[{"name":"format","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(format : IO::ByteFormat)","args_html":"(format : IO::ByteFormat)","location":{"filename":"src/byte_format.cr","line_number":16,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format.cr#L16"},"def":{"name":"format=","args":[{"name":"format","external_name":"format","restriction":"IO::ByteFormat"}],"visibility":"Public","body":"@format = format"}},{"html_id":"io:IO-instance-method","name":"io","abstract":false,"location":{"filename":"src/byte_format.cr","line_number":15,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format.cr#L15"},"def":{"name":"io","return_type":"IO","visibility":"Public","body":"@io"}},{"html_id":"serialize(string:String,bytesize:Int)-instance-method","name":"serialize","abstract":false,"args":[{"name":"string","external_name":"string","restriction":"String"},{"name":"bytesize","external_name":"bytesize","restriction":"Int"}],"args_string":"(string : String, bytesize : Int)","args_html":"(string : String, bytesize : Int)","location":{"filename":"src/byte_format/serializer.cr","line_number":51,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/serializer.cr#L51"},"def":{"name":"serialize","args":[{"name":"string","external_name":"string","restriction":"String"},{"name":"bytesize","external_name":"bytesize","restriction":"Int"}],"visibility":"Public","body":"if string.bytesize != bytesize\n  raise(Error.new(\"String bytesize not expected, expected: #{bytesize}, have: #{string.bytesize}\"))\nend\nserialize(string, add_delimiter: false)\n"}},{"html_id":"serialize(string:String,bytesize:Range(Int32|Nil,Int32|Nil))-instance-method","name":"serialize","abstract":false,"args":[{"name":"string","external_name":"string","restriction":"String"},{"name":"bytesize","external_name":"bytesize","restriction":"Range(Int32 | ::Nil, Int32 | ::Nil)"}],"args_string":"(string : String, bytesize : Range(Int32 | Nil, Int32 | Nil))","args_html":"(string : String, bytesize : Range(Int32 | Nil, Int32 | Nil))","location":{"filename":"src/byte_format/serializer.cr","line_number":58,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/serializer.cr#L58"},"def":{"name":"serialize","args":[{"name":"string","external_name":"string","restriction":"String"},{"name":"bytesize","external_name":"bytesize","restriction":"Range(Int32 | ::Nil, Int32 | ::Nil)"}],"visibility":"Public","body":"if bytesize.includes?(string.bytesize)\nelse\n  raise(Error.new(\"String bytesize not in range: #{bytesize} (have: #{string.bytesize})\"))\nend\nserialize(string, add_delimiter: true)\n"}},{"html_id":"serialize(object:Crystalizer::Type)-instance-method","name":"serialize","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"Crystalizer::Type"}],"args_string":"(object : Crystalizer::Type)","args_html":"(object : <a href=\"../Crystalizer/Type.html\">Crystalizer::Type</a>)","location":{"filename":"src/byte_format/serializer.cr","line_number":2,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/serializer.cr#L2"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":"Crystalizer::Type"}],"visibility":"Public","body":"object.serialize(self)"}},{"html_id":"serialize(number:Number::Primitive)-instance-method","name":"serialize","abstract":false,"args":[{"name":"number","external_name":"number","restriction":"Number::Primitive"}],"args_string":"(number : Number::Primitive)","args_html":"(number : Number::Primitive)","location":{"filename":"src/byte_format/serializer.cr","line_number":14,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/serializer.cr#L14"},"def":{"name":"serialize","args":[{"name":"number","external_name":"number","restriction":"Number::Primitive"}],"visibility":"Public","body":"@io.write_bytes(number, @format)"}},{"html_id":"serialize(bool:Bool)-instance-method","name":"serialize","abstract":false,"args":[{"name":"bool","external_name":"bool","restriction":"Bool"}],"args_string":"(bool : Bool)","args_html":"(bool : Bool)","location":{"filename":"src/byte_format/serializer.cr","line_number":18,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/serializer.cr#L18"},"def":{"name":"serialize","args":[{"name":"bool","external_name":"bool","restriction":"Bool"}],"visibility":"Public","body":"@io.write_byte(bool ? 1_u8 : 0_u8)"}},{"html_id":"serialize(bytes:Bytes)-instance-method","name":"serialize","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes)","args_html":"(bytes : Bytes)","location":{"filename":"src/byte_format/serializer.cr","line_number":22,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/serializer.cr#L22"},"def":{"name":"serialize","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"visibility":"Public","body":"@io.write(bytes, @format)"}},{"html_id":"serialize(object:Enum)-instance-method","name":"serialize","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"Enum"}],"args_string":"(object : Enum)","args_html":"(object : Enum)","location":{"filename":"src/byte_format/serializer.cr","line_number":26,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/serializer.cr#L26"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":"Enum"}],"visibility":"Public","body":"@io.write_bytes(object.value, @format)"}},{"html_id":"serialize(object:NamedTuple|Hash)-instance-method","name":"serialize","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"NamedTuple | Hash"}],"args_string":"(object : NamedTuple | Hash)","args_html":"(object : NamedTuple | Hash)","location":{"filename":"src/byte_format/serializer.cr","line_number":30,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/serializer.cr#L30"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":"NamedTuple | Hash"}],"visibility":"Public","body":"object.each do |key, value|\n  serialize(key)\n  serialize(value)\nend"}},{"html_id":"serialize(array:Array|Deque|Set|Tuple)-instance-method","name":"serialize","abstract":false,"args":[{"name":"array","external_name":"array","restriction":"Array | Deque | Set | Tuple"}],"args_string":"(array : Array | Deque | Set | Tuple)","args_html":"(array : Array | Deque | Set | Tuple)","location":{"filename":"src/byte_format/serializer.cr","line_number":37,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/serializer.cr#L37"},"def":{"name":"serialize","args":[{"name":"array","external_name":"array","restriction":"Array | Deque | Set | Tuple"}],"visibility":"Public","body":"array.each do |value|\n  serialize(value)\nend"}},{"html_id":"serialize(string:Path|String|Symbol,add_delimiter:Bool=true)-instance-method","name":"serialize","doc":"Serializes a `String` to bytes, written to the `io`, and add a trailing `string_delimiter`.","summary":"<p>Serializes a <code>String</code> to bytes, written to the <code><a href=\"../Crystalizer/ByteFormat.html#io%3AIO-instance-method\">#io</a></code>, and add a trailing <code><a href=\"../Crystalizer/ByteFormat.html#string_delimiter%3AChar%3F-instance-method\">#string_delimiter</a></code>.</p>","abstract":false,"args":[{"name":"string","external_name":"string","restriction":"Path | String | Symbol"},{"name":"add_delimiter","default_value":"true","external_name":"add_delimiter","restriction":"Bool"}],"args_string":"(string : Path | String | Symbol, add_delimiter : Bool = true)","args_html":"(string : Path | String | Symbol, add_delimiter : Bool = <span class=\"n\">true</span>)","location":{"filename":"src/byte_format/serializer.cr","line_number":44,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/serializer.cr#L44"},"def":{"name":"serialize","args":[{"name":"string","external_name":"string","restriction":"Path | String | Symbol"},{"name":"add_delimiter","default_value":"true","external_name":"add_delimiter","restriction":"Bool"}],"visibility":"Public","body":"string.to_s(@io)\nif add_delimiter && (string_delimiter = @string_delimiter)\n  @io << string_delimiter\nend\n"}},{"html_id":"serialize(object:O)forallO-instance-method","name":"serialize","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"O"}],"args_string":"(object : O) forall O","args_html":"(object : O) forall O","location":{"filename":"src/byte_format/serializer.cr","line_number":75,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format/serializer.cr#L75"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":"O"}],"visibility":"Public","body":"Crystalizer.each_ivar(object) do |_, value, var|\n  de_unionize(value, var)\nend"}},{"html_id":"string_delimiter:Char?-instance-method","name":"string_delimiter","abstract":false,"location":{"filename":"src/byte_format.cr","line_number":17,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format.cr#L17"},"def":{"name":"string_delimiter","visibility":"Public","body":"@string_delimiter"}},{"html_id":"string_delimiter=(string_delimiter:Char|Nil)-instance-method","name":"string_delimiter=","abstract":false,"args":[{"name":"string_delimiter","external_name":"string_delimiter","restriction":"::Char | ::Nil"}],"args_string":"(string_delimiter : Char | Nil)","args_html":"(string_delimiter : Char | Nil)","location":{"filename":"src/byte_format.cr","line_number":17,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format.cr#L17"},"def":{"name":"string_delimiter=","args":[{"name":"string_delimiter","external_name":"string_delimiter","restriction":"::Char | ::Nil"}],"visibility":"Public","body":"@string_delimiter = string_delimiter"}}],"types":[{"html_id":"crystalizer/Crystalizer/ByteFormat/Error","path":"Crystalizer/ByteFormat/Error.html","kind":"class","full_name":"Crystalizer::ByteFormat::Error","name":"Error","abstract":false,"superclass":{"html_id":"crystalizer/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crystalizer/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crystalizer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalizer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/byte_format.cr","line_number":12,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/byte_format.cr#L12"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crystalizer/Crystalizer/ByteFormat","kind":"struct","full_name":"Crystalizer::ByteFormat","name":"ByteFormat"}}]},{"html_id":"crystalizer/Crystalizer/Deserializer","path":"Crystalizer/Deserializer.html","kind":"module","full_name":"Crystalizer::Deserializer","name":"Deserializer","abstract":false,"locations":[{"filename":"src/deserializer.cr","line_number":4,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer.cr#L4"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"crystalizer/Crystalizer/ByteFormat","kind":"struct","full_name":"Crystalizer::ByteFormat","name":"ByteFormat"},{"html_id":"crystalizer/Crystalizer/JSON/Deserializer","kind":"struct","full_name":"Crystalizer::JSON::Deserializer","name":"Deserializer"},{"html_id":"crystalizer/Crystalizer/YAML/Deserializer","kind":"struct","full_name":"Crystalizer::YAML::Deserializer","name":"Deserializer"}],"namespace":{"html_id":"crystalizer/Crystalizer","kind":"module","full_name":"Crystalizer","name":"Crystalizer"},"doc":"Deserializer interface to be extended.","summary":"<p>Deserializer interface to be extended.</p>","instance_methods":[{"html_id":"deserialize(totype:T.class)forallT-instance-method","name":"deserialize","abstract":true,"args":[{"name":"type","external_name":"to","restriction":"T.class"}],"args_string":"(to type : T.class) forall T","args_html":"(to type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) forall T","location":{"filename":"src/deserializer.cr","line_number":5,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer.cr#L5"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"T.class"}],"visibility":"Public","body":""}}],"types":[{"html_id":"crystalizer/Crystalizer/Deserializer/NamedTupleObject","path":"Crystalizer/Deserializer/NamedTupleObject.html","kind":"struct","full_name":"Crystalizer::Deserializer::NamedTupleObject(U, NT, N)","name":"NamedTupleObject","abstract":false,"superclass":{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crystalizer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crystalizer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/deserializer/named_tuple_object.cr","line_number":1,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/named_tuple_object.cr#L1"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crystalizer/Crystalizer/Deserializer","kind":"module","full_name":"Crystalizer::Deserializer","name":"Deserializer"},"constructors":[{"html_id":"new(type:::NamedTuple.class)-class-method","name":"new","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"::NamedTuple.class"}],"args_string":"(type : ::NamedTuple.class)","args_html":"(type : <span class=\"t\">::</span><span class=\"t\">NamedTuple</span>.<span class=\"k\">class</span>)","location":{"filename":"src/deserializer/named_tuple_object.cr","line_number":7,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/named_tuple_object.cr#L7"},"def":{"name":"new","args":[{"name":"type","external_name":"type","restriction":"::NamedTuple.class"}],"visibility":"Public","body":"internal_new(type)"}},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/deserializer/named_tuple_object.cr","line_number":1,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/named_tuple_object.cr#L1"},"def":{"name":"new","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"html_id":"initialize-instance-method","name":"initialize","abstract":false,"location":{"filename":"src/deserializer/named_tuple_object.cr","line_number":1,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/named_tuple_object.cr#L1"},"def":{"name":"initialize","visibility":"Public","body":""}},{"html_id":"named_tuple:NT-instance-method","name":"named_tuple","doc":"Returns the deserialized `NamedTuple` instance.","summary":"<p>Returns the deserialized <code>NamedTuple</code> instance.</p>","abstract":false,"location":{"filename":"src/deserializer/named_tuple_object.cr","line_number":34,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/named_tuple_object.cr#L34"},"def":{"name":"named_tuple","return_type":"NT","visibility":"Public","body":"{% if true %}\n    {% i = 0 %}\n      {\n      {% for key, type in NT %}\n        {{ key }}: (\n          case value = @variables[{{ i }}]\n          when nil      then {% if !type.nilable? %} raise Error.new \"Missing {{ key }} value.\" {% end %}\n          when {{ type }} then value\n          else          raise Error.new \"Incorrect type for {{ key }}: #{value}\"\n          end\n        ),\n      {% i += 1 %}\n      {% end %}\n      }\n    {% end %}"}},{"html_id":"set_value(key:String,&)-instance-method","name":"set_value","doc":"Sets the value of `key`, and yields its type class.","summary":"<p>Sets the value of <code>key</code>, and yields its type class.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String, &)","args_html":"(key : String, &)","location":{"filename":"src/deserializer/named_tuple_object.cr","line_number":19,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/named_tuple_object.cr#L19"},"def":{"name":"set_value","args":[{"name":"key","external_name":"key","restriction":"String"}],"yields":0,"block_arity":0,"visibility":"Public","body":"{% if true %}\n      {% i = 0 %}\n      case key\n      {% for key, type in NT %}\n      when {{ key.stringify }}\n        @variables[{{ i }}] = yield({{ type }}).as({{ type }})\n        {% i += 1 %}\n      {% end %}\n      else raise Error.new \"Missing key in {{ NT }}: #{key}\"\n      end\n    {% end %}"}},{"html_id":"size-instance-method","name":"size","abstract":false,"location":{"filename":"src/deserializer/named_tuple_object.cr","line_number":52,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/named_tuple_object.cr#L52"},"def":{"name":"size","visibility":"Public","body":"{{ NT.size }}"}}],"types":[{"html_id":"crystalizer/Crystalizer/Deserializer/NamedTupleObject/Error","path":"Crystalizer/Deserializer/NamedTupleObject/Error.html","kind":"class","full_name":"Crystalizer::Deserializer::NamedTupleObject::Error","name":"Error","abstract":false,"superclass":{"html_id":"crystalizer/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crystalizer/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crystalizer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalizer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/deserializer/named_tuple_object.cr","line_number":2,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/named_tuple_object.cr#L2"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crystalizer/Crystalizer/Deserializer/NamedTupleObject","kind":"struct","full_name":"Crystalizer::Deserializer::NamedTupleObject(U, NT, N)","name":"NamedTupleObject"}}]},{"html_id":"crystalizer/Crystalizer/Deserializer/NonSelfDescribingObject","path":"Crystalizer/Deserializer/NonSelfDescribingObject.html","kind":"struct","full_name":"Crystalizer::Deserializer::NonSelfDescribingObject(T)","name":"NonSelfDescribingObject","abstract":false,"superclass":{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crystalizer/Crystalizer/Deserializer/Object","kind":"module","full_name":"Crystalizer::Deserializer::Object","name":"Object"},{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crystalizer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crystalizer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/deserializer/non_self_describing_object.cr","line_number":3,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/non_self_describing_object.cr#L3"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"crystalizer/Crystalizer/Deserializer/Object","kind":"module","full_name":"Crystalizer::Deserializer::Object","name":"Object"}],"namespace":{"html_id":"crystalizer/Crystalizer/Deserializer","kind":"module","full_name":"Crystalizer::Deserializer","name":"Deserializer"},"constructors":[{"html_id":"new(type:T.class)-class-method","name":"new","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"T.class"}],"args_string":"(type : T.class)","args_html":"(type : <span class=\"t\">T</span>.<span class=\"k\">class</span>)","location":{"filename":"src/deserializer/non_self_describing_object.cr","line_number":8,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/non_self_describing_object.cr#L8"},"def":{"name":"new","args":[{"name":"type","external_name":"type","restriction":"T.class"}],"visibility":"Public","body":"init(NonSelfDescribingObject(T))"}},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/deserializer/object.cr","line_number":23,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/object.cr#L23"},"def":{"name":"new","visibility":"Public","body":"_ = NonSelfDescribingObject(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"object_instance:T-instance-method","name":"object_instance","abstract":false,"location":{"filename":"src/deserializer/non_self_describing_object.cr","line_number":32,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/non_self_describing_object.cr#L32"},"def":{"name":"object_instance","return_type":"T","visibility":"Public","body":"if !@ran\n  raise(Error.new(\"#set_each_ivar not previously called: no instance variable set.\"))\nend\n@object_instance\n"}},{"html_id":"set_each_ivar(&)-instance-method","name":"set_each_ivar","doc":"Yields each instance variable's `Variable` metadata and it value.\n\nThis method can be used for non self-describing formats (which does not holds keys).","summary":"<p>Yields each instance variable's <code><a href=\"../../Crystalizer/Variable.html\">Variable</a></code> metadata and it value.</p>","abstract":false,"location":{"filename":"src/deserializer/non_self_describing_object.cr","line_number":15,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/non_self_describing_object.cr#L15"},"def":{"name":"set_each_ivar","yields":0,"block_arity":0,"visibility":"Public","body":"{% for ivar in T.instance_vars %}\n      {% ann = ivar.annotation(::Crystalizer::Field) %}\n      {% if ann && (ann[:ignore] || ann[:ignore_deserialize]) %}{% else %}\n        {% key = ((ann && ann[:key]) || ivar).id.stringify %}\n        variable = Variable.new(\n          type: {{ ivar.type }},\n          annotations: {{ ann && ann.named_args }},\n          nilable: false,\n          has_default: {{ ivar.has_default_value? }}\n        )\n        pointerof(@object_instance.@{{ ivar }}).value = yield(variable).as {{ ivar.type }}\n      {% end %}\n    {% end %}\n@ran = true\n"}}]},{"html_id":"crystalizer/Crystalizer/Deserializer/Object","path":"Crystalizer/Deserializer/Object.html","kind":"module","full_name":"Crystalizer::Deserializer::Object(T)","name":"Object","abstract":false,"locations":[{"filename":"src/deserializer/object.cr","line_number":1,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/object.cr#L1"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"crystalizer/Crystalizer/Deserializer/NonSelfDescribingObject","kind":"struct","full_name":"Crystalizer::Deserializer::NonSelfDescribingObject(T)","name":"NonSelfDescribingObject"},{"html_id":"crystalizer/Crystalizer/Deserializer/SelfDescribingObject","kind":"struct","full_name":"Crystalizer::Deserializer::SelfDescribingObject(T, N)","name":"SelfDescribingObject"}],"namespace":{"html_id":"crystalizer/Crystalizer/Deserializer","kind":"module","full_name":"Crystalizer::Deserializer","name":"Deserializer"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/deserializer/object.cr","line_number":23,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/object.cr#L23"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"object_instance:T-instance-method","name":"object_instance","abstract":true,"location":{"filename":"src/deserializer/object.cr","line_number":29,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/object.cr#L29"},"def":{"name":"object_instance","return_type":"T","visibility":"Public","body":""}}],"types":[{"html_id":"crystalizer/Crystalizer/Deserializer/Object/Error","path":"Crystalizer/Deserializer/Object/Error.html","kind":"class","full_name":"Crystalizer::Deserializer::Object::Error","name":"Error","abstract":false,"superclass":{"html_id":"crystalizer/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crystalizer/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crystalizer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalizer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/deserializer/object.cr","line_number":2,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/object.cr#L2"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crystalizer/Crystalizer/Deserializer/Object","kind":"module","full_name":"Crystalizer::Deserializer::Object(T)","name":"Object"}}]},{"html_id":"crystalizer/Crystalizer/Deserializer/SelfDescribingObject","path":"Crystalizer/Deserializer/SelfDescribingObject.html","kind":"struct","full_name":"Crystalizer::Deserializer::SelfDescribingObject(T, N)","name":"SelfDescribingObject","abstract":false,"superclass":{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crystalizer/Crystalizer/Deserializer/Object","kind":"module","full_name":"Crystalizer::Deserializer::Object","name":"Object"},{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crystalizer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crystalizer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/deserializer/self_describing_object.cr","line_number":3,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/self_describing_object.cr#L3"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"crystalizer/Crystalizer/Deserializer/Object","kind":"module","full_name":"Crystalizer::Deserializer::Object","name":"Object"}],"namespace":{"html_id":"crystalizer/Crystalizer/Deserializer","kind":"module","full_name":"Crystalizer::Deserializer","name":"Deserializer"},"constructors":[{"html_id":"new(type:T.class)-class-method","name":"new","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"T.class"}],"args_string":"(type : T.class)","args_html":"(type : <span class=\"t\">T</span>.<span class=\"k\">class</span>)","location":{"filename":"src/deserializer/self_describing_object.cr","line_number":8,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/self_describing_object.cr#L8"},"def":{"name":"new","args":[{"name":"type","external_name":"type","restriction":"T.class"}],"visibility":"Public","body":"init(\"SelfDescribingObject(T, {{T.instance_vars.size}})\")"}},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/deserializer/object.cr","line_number":23,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/object.cr#L23"},"def":{"name":"new","visibility":"Public","body":"_ = SelfDescribingObject(T, N).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"object_instance:T-instance-method","name":"object_instance","doc":"Returns the deserialized object instance.","summary":"<p>Returns the deserialized object instance.</p>","abstract":false,"location":{"filename":"src/deserializer/self_describing_object.cr","line_number":59,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/self_describing_object.cr#L59"},"def":{"name":"object_instance","return_type":"T","visibility":"Public","body":"check_ivars\n@object_instance\n"}},{"html_id":"set_ivar(key:String,&)-instance-method","name":"set_ivar","doc":"Sets a value for an instance variable corresponding to the key.","summary":"<p>Sets a value for an instance variable corresponding to the key.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String, &)","args_html":"(key : String, &)","location":{"filename":"src/deserializer/self_describing_object.cr","line_number":13,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/deserializer/self_describing_object.cr#L13"},"def":{"name":"set_ivar","args":[{"name":"key","external_name":"key","restriction":"String"}],"yields":0,"block_arity":0,"visibility":"Public","body":"{% if true %}\n    {% i = 0 %}\n    case key\n    {% for ivar in T.instance_vars %}\n      {% ann = ivar.annotation(::Crystalizer::Field) %}\n      {% if ann && (ann[:ignore] || ann[:ignore_deserialize]) %}{% else %}\n        {% key = ((ann && ann[:key]) || ivar).id.stringify %}\n        when {{ key }}\n          raise Error.new \"Duplicated field for #{T}: #{key}\" if @found[{{ i }}]\n          @found[{{ i }}] = true\n          variable = Variable.new(\n            type: {{ ivar.type }},\n            annotations: {{ ann && ann.named_args }},\n            nilable: {{ ivar.type.nilable? }},\n            has_default: {{ ivar.has_default_value? }}\n          )\n          pointerof(@object_instance.@{{ ivar }}).value = yield(variable).as {{ ivar.type }}\n        {% end %}\n        {% i += 1 %}\n      {% end %}\n      else raise Error.new \"Unknown field in #{T} matching the given string: #{key}\"\n      end\n    {% end %}"}}]}]},{"html_id":"crystalizer/Crystalizer/Field","path":"Crystalizer/Field.html","kind":"annotation","full_name":"Crystalizer::Field","name":"Field","abstract":false,"locations":[{"filename":"src/field.cr","line_number":14,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/field.cr#L14"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crystalizer/Crystalizer","kind":"module","full_name":"Crystalizer","name":"Crystalizer"},"doc":"Annotations are similar to the stdlib's `Serializable`, but all features are not yet fully implemented.\n\n```\nstruct Strukt\n  @[Crystalizer::Field(ignore: true, key: \"Var\")]\n  @var : Int32\nend\n```\n`Crystalizer::Field` properties:\n- **ignore**: if `true` skip this field in serialization and deserialization (by default `false`)\n- **ignore_serialize**: if `true` skip this field in serialization (by default `false`)\n- **ignore_deserialize**: if `true` skip this field in deserialization (by default `false`)\n- **key**: the value of the key in the json object (by default the name of the instance variable)","summary":"<p>Annotations are similar to the stdlib's <code>Serializable</code>, but all features are not yet fully implemented.</p>"},{"html_id":"crystalizer/Crystalizer/Format","path":"Crystalizer/Format.html","kind":"module","full_name":"Crystalizer::Format","name":"Format","abstract":false,"locations":[{"filename":"src/format.cr","line_number":2,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/format.cr#L2"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crystalizer/Crystalizer","kind":"module","full_name":"Crystalizer","name":"Crystalizer"},"doc":"Format interface","summary":"<p>Format interface</p>","instance_methods":[{"html_id":"deserialize(io:IO,totype:T.class)forallT-instance-method","name":"deserialize","abstract":true,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"type","external_name":"to","restriction":"T.class"}],"args_string":"(io : IO, to type : T.class) forall T","args_html":"(io : IO, to type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) forall T","location":{"filename":"src/format.cr","line_number":4,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/format.cr#L4"},"def":{"name":"deserialize","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"type","external_name":"to","restriction":"T.class"}],"visibility":"Public","body":""}},{"html_id":"serialize(io:IO,object)-instance-method","name":"serialize","abstract":true,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"object","external_name":"object","restriction":""}],"args_string":"(io : IO, object)","args_html":"(io : IO, object)","location":{"filename":"src/format.cr","line_number":3,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/format.cr#L3"},"def":{"name":"serialize","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"object","external_name":"object","restriction":""}],"visibility":"Public","body":""}}]},{"html_id":"crystalizer/Crystalizer/JSON","path":"Crystalizer/JSON.html","kind":"module","full_name":"Crystalizer::JSON","name":"JSON","abstract":false,"locations":[{"filename":"src/json.cr","line_number":10,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json.cr#L10"},{"filename":"src/json/any.cr","line_number":1,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/any.cr#L1"},{"filename":"src/json/deserializer.cr","line_number":1,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L1"},{"filename":"src/json/serializer.cr","line_number":1,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L1"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"crystalizer/Crystalizer/Format","kind":"module","full_name":"Crystalizer::Format","name":"Format"}],"namespace":{"html_id":"crystalizer/Crystalizer","kind":"module","full_name":"Crystalizer","name":"Crystalizer"},"class_methods":[{"html_id":"deserialize(io:IO,totype:T.class):TforallT-class-method","name":"deserialize","doc":"Deserializes a JSON document to a given type `T`.","summary":"<p>Deserializes a JSON document to a given type <code>T</code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"type","external_name":"to","restriction":"T.class"}],"args_string":"(io : IO, to type : T.class) : T forall T","args_html":"(io : IO, to type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : T forall T","location":{"filename":"src/json/deserializer.cr","line_number":3,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L3"},"def":{"name":"deserialize","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"type","external_name":"to","restriction":"T.class"}],"return_type":"T","visibility":"Public","body":"(Deserializer.new(io)).deserialize(to: type)"}},{"html_id":"deserialize(string:String,totype:T.class):TforallT-class-method","name":"deserialize","doc":"Deserializes a JSON document to a given type `T`.","summary":"<p>Deserializes a JSON document to a given type <code>T</code>.</p>","abstract":false,"args":[{"name":"string","external_name":"string","restriction":"String"},{"name":"type","external_name":"to","restriction":"T.class"}],"args_string":"(string : String, to type : T.class) : T forall T","args_html":"(string : String, to type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : T forall T","location":{"filename":"src/json/deserializer.cr","line_number":8,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L8"},"def":{"name":"deserialize","args":[{"name":"string","external_name":"string","restriction":"String"},{"name":"type","external_name":"to","restriction":"T.class"}],"return_type":"T","visibility":"Public","body":"(Deserializer.new(string)).deserialize(to: type)"}},{"html_id":"parse(string_or_io:String|IO):Any-class-method","name":"parse","doc":"Parses a JSON document as an `Any`.","summary":"<p>Parses a JSON document as an <code><a href=\"../Crystalizer/JSON/Any.html\">Any</a></code>.</p>","abstract":false,"args":[{"name":"string_or_io","external_name":"string_or_io","restriction":"String | IO"}],"args_string":"(string_or_io : String | IO) : Any","args_html":"(string_or_io : String | IO) : <a href=\"../Crystalizer/JSON/Any.html\">Any</a>","location":{"filename":"src/json/deserializer.cr","line_number":13,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L13"},"def":{"name":"parse","args":[{"name":"string_or_io","external_name":"string_or_io","restriction":"String | IO"}],"return_type":"Any","visibility":"Public","body":"deserialize(string_or_io, Any)"}},{"html_id":"serialize(io:IO,object,*,indent:String=Serializer.indent):Nil-class-method","name":"serialize","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"object","external_name":"object","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"indent","default_value":"Serializer.indent","external_name":"indent","restriction":"String"}],"args_string":"(io : IO, object, *, indent : String = Serializer.indent) : Nil","args_html":"(io : IO, object, *, indent : String = <span class=\"t\">Serializer</span>.indent) : Nil","location":{"filename":"src/json/serializer.cr","line_number":2,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L2"},"def":{"name":"serialize","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"object","external_name":"object","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"indent","default_value":"Serializer.indent","external_name":"indent","restriction":"String"}],"splat_index":2,"return_type":"Nil","visibility":"Public","body":"Serializer.new(io) do |serializer|\n  serializer.indent = indent\n  serializer.serialize(object)\nend"}},{"html_id":"serialize(object,*,indent:String=Serializer.indent):String-class-method","name":"serialize","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"indent","default_value":"Serializer.indent","external_name":"indent","restriction":"String"}],"args_string":"(object, *, indent : String = Serializer.indent) : String","args_html":"(object, *, indent : String = <span class=\"t\">Serializer</span>.indent) : String","location":{"filename":"src/json/serializer.cr","line_number":9,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L9"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"indent","default_value":"Serializer.indent","external_name":"indent","restriction":"String"}],"splat_index":1,"return_type":"String","visibility":"Public","body":"String.build do |str|\n  serialize(str, object, indent: indent)\nend"}}],"types":[{"html_id":"crystalizer/Crystalizer/JSON/Any","path":"Crystalizer/JSON/Any.html","kind":"struct","full_name":"Crystalizer::JSON::Any","name":"Any","abstract":false,"superclass":{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crystalizer/Crystalizer/Any","kind":"module","full_name":"Crystalizer::Any","name":"Any"},{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crystalizer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crystalizer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/json/any.cr","line_number":1,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/any.cr#L1"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"crystalizer/Crystalizer/Any","kind":"module","full_name":"Crystalizer::Any","name":"Any"}],"namespace":{"html_id":"crystalizer/Crystalizer/JSON","kind":"module","full_name":"Crystalizer::JSON","name":"JSON"},"constructors":[{"html_id":"new(raw:Type)-class-method","name":"new","abstract":false,"args":[{"name":"raw","external_name":"raw","restriction":"Type"}],"args_string":"(raw : Type)","args_html":"(raw : <a href=\"../../Crystalizer/JSON/Any/Type.html\">Type</a>)","location":{"filename":"src/json/any.cr","line_number":10,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/any.cr#L10"},"def":{"name":"new","args":[{"name":"raw","external_name":"raw","restriction":"Type"}],"visibility":"Public","body":"_ = allocate\n_.initialize(raw)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(pull:::JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : ::JSON::PullParser)","args_html":"(pull : ::JSON::PullParser)","location":{"filename":"src/json/any.cr","line_number":13,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/any.cr#L13"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new(case pull.kind\nwhen .null?\n  pull.read_null\nwhen .bool?\n  pull.read_bool\nwhen .int?\n  pull.read_int\nwhen .float?\n  pull.read_float\nwhen .string?\n  pull.read_string\nwhen .begin_array?\n  ary = Array(Crystalizer::Any).new\n  pull.read_array do\n    ary << (new(pull))\n  end\n  ary\nwhen .begin_object?\n  hash = Hash(String, Crystalizer::Any).new\n  pull.read_object do |key|\n    hash[key] = new(pull)\n  end\n  hash\nelse\n  raise(JSON::Error.new(\"Unknown pull kind: #{pull.kind}\"))\nend)"}}],"instance_methods":[{"html_id":"raw:Type-instance-method","name":"raw","doc":"Returns the raw underlying value.","summary":"<p>Returns the raw underlying value.</p>","abstract":false,"location":{"filename":"src/json/any.cr","line_number":5,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/any.cr#L5"},"def":{"name":"raw","return_type":"Type","visibility":"Public","body":"@raw"}}],"types":[{"html_id":"crystalizer/Crystalizer/JSON/Any/Error","path":"Crystalizer/JSON/Any/Error.html","kind":"class","full_name":"Crystalizer::JSON::Any::Error","name":"Error","abstract":false,"superclass":{"html_id":"crystalizer/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crystalizer/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crystalizer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalizer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/json/any.cr","line_number":7,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/any.cr#L7"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crystalizer/Crystalizer/JSON/Any","kind":"struct","full_name":"Crystalizer::JSON::Any","name":"Any"}},{"html_id":"crystalizer/Crystalizer/JSON/Any/Type","path":"Crystalizer/JSON/Any/Type.html","kind":"alias","full_name":"Crystalizer::JSON::Any::Type","name":"Type","abstract":false,"locations":[{"filename":"src/json/any.cr","line_number":3,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/any.cr#L3"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":true,"aliased":"(Array(Crystalizer::Any) | Bool | Float64 | Hash(String, Crystalizer::Any) | Int64 | String | Nil)","aliased_html":"Array(<a href=\"../../../Crystalizer/Any.html\">Crystalizer::Any</a>) | Bool | Float64 | Hash(String, <a href=\"../../../Crystalizer/Any.html\">Crystalizer::Any</a>) | Int64 | String | Nil","const":false,"namespace":{"html_id":"crystalizer/Crystalizer/JSON/Any","kind":"struct","full_name":"Crystalizer::JSON::Any","name":"Any"}}]},{"html_id":"crystalizer/Crystalizer/JSON/Deserializer","path":"Crystalizer/JSON/Deserializer.html","kind":"struct","full_name":"Crystalizer::JSON::Deserializer","name":"Deserializer","abstract":false,"superclass":{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crystalizer/Crystalizer/Deserializer","kind":"module","full_name":"Crystalizer::Deserializer","name":"Deserializer"},{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crystalizer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crystalizer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/json/deserializer.cr","line_number":17,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L17"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"crystalizer/Crystalizer/Deserializer","kind":"module","full_name":"Crystalizer::Deserializer","name":"Deserializer"}],"namespace":{"html_id":"crystalizer/Crystalizer/JSON","kind":"module","full_name":"Crystalizer::JSON","name":"JSON"},"class_methods":[{"html_id":"deserialize_object_key?(number:String,totype:Number::Primitive.class)-class-method","name":"deserialize_object_key?","abstract":false,"args":[{"name":"number","external_name":"number","restriction":"String"},{"name":"type","external_name":"to","restriction":"Number::Primitive.class"}],"args_string":"(number : String, to type : Number::Primitive.class)","args_html":"(number : String, to type : <span class=\"t\">Number</span><span class=\"t\">::</span><span class=\"t\">Primitive</span>.<span class=\"k\">class</span>)","location":{"filename":"src/json/deserializer.cr","line_number":139,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L139"},"def":{"name":"deserialize_object_key?","args":[{"name":"number","external_name":"number","restriction":"String"},{"name":"type","external_name":"to","restriction":"Number::Primitive.class"}],"visibility":"Public","body":"begin\n  number.new(number)\nrescue\n  nil\nend"}},{"html_id":"deserialize_object_key?(string:String,totype:String.class)-class-method","name":"deserialize_object_key?","abstract":false,"args":[{"name":"string","external_name":"string","restriction":"String"},{"name":"type","external_name":"to","restriction":"String.class"}],"args_string":"(string : String, to type : String.class)","args_html":"(string : String, to type : <span class=\"t\">String</span>.<span class=\"k\">class</span>)","location":{"filename":"src/json/deserializer.cr","line_number":146,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L146"},"def":{"name":"deserialize_object_key?","args":[{"name":"string","external_name":"string","restriction":"String"},{"name":"type","external_name":"to","restriction":"String.class"}],"visibility":"Public","body":"string"}}],"constructors":[{"html_id":"new(pull:::JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : ::JSON::PullParser)","args_html":"(pull : ::JSON::PullParser)","location":{"filename":"src/json/deserializer.cr","line_number":20,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L20"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"_ = allocate\n_.initialize(pull)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(string_or_io:IO|String):Deserializer-class-method","name":"new","abstract":false,"args":[{"name":"string_or_io","external_name":"string_or_io","restriction":"IO | String"}],"args_string":"(string_or_io : IO | String) : Deserializer","args_html":"(string_or_io : IO | String) : <a href=\"../../Crystalizer/JSON/Deserializer.html\">Deserializer</a>","location":{"filename":"src/json/deserializer.cr","line_number":23,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L23"},"def":{"name":"new","args":[{"name":"string_or_io","external_name":"string_or_io","restriction":"IO | String"}],"return_type":"Deserializer","visibility":"Public","body":"new(::JSON::PullParser.new(string_or_io))"}}],"instance_methods":[{"html_id":"deserialize(totype:Crystalizer::Type.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Crystalizer::Type.class"}],"args_string":"(to type : Crystalizer::Type.class)","args_html":"(to type : <span class=\"t\">Crystalizer</span><span class=\"t\">::</span><span class=\"t\">Type</span>.<span class=\"k\">class</span>)","location":{"filename":"src/json/deserializer.cr","line_number":18,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L18"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Crystalizer::Type.class"}],"visibility":"Public","body":"type.deserialize(self)"}},{"html_id":"deserialize(totype:::JSON::Serializable.class|Any.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"::JSON::Serializable.class | Any.class"}],"args_string":"(to type : ::JSON::Serializable.class | Any.class)","args_html":"(to type : <span class=\"t\">::</span><span class=\"t\">JSON</span><span class=\"t\">::</span><span class=\"t\">Serializable</span>.<span class=\"k\">class</span> | <span class=\"t\">Any</span>.<span class=\"k\">class</span>)","location":{"filename":"src/json/deserializer.cr","line_number":27,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L27"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"::JSON::Serializable.class | Any.class"}],"visibility":"Public","body":"type.new(@pull)"}},{"html_id":"deserialize(totype:Hash.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Hash.class"}],"args_string":"(to type : Hash.class)","args_html":"(to type : <span class=\"t\">Hash</span>.<span class=\"k\">class</span>)","location":{"filename":"src/json/deserializer.cr","line_number":37,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L37"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Hash.class"}],"visibility":"Public","body":"hash = type.new\nkey_class, value_class = typeof(hash.first)\n@pull.read_object do |key, key_location|\n  if parsed_key = self.class.deserialize_object_key?(key, key_class)\n    hash[parsed_key] = deserialize(value_class)\n  else\n    raise(::JSON::ParseException.new(\"Can't convert #{key.inspect} into #{key_class}\", *key_location))\n  end\nend\nhash\n"}},{"html_id":"deserialize(totype:Array.class|Deque.class|Set.class)forallT-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Array.class | Deque.class | Set.class"}],"args_string":"(to type : Array.class | Deque.class | Set.class) forall T","args_html":"(to type : <span class=\"t\">Array</span>.<span class=\"k\">class</span> | <span class=\"t\">Deque</span>.<span class=\"k\">class</span> | <span class=\"t\">Set</span>.<span class=\"k\">class</span>) forall T","location":{"filename":"src/json/deserializer.cr","line_number":52,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L52"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Array.class | Deque.class | Set.class"}],"visibility":"Public","body":"array = type.new\nvalue_class = typeof(array.first)\n@pull.read_array do\n  array << (deserialize(value_class))\nend\narray\n"}},{"html_id":"deserialize(totype:Tuple.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Tuple.class"}],"args_string":"(to type : Tuple.class)","args_html":"(to type : <span class=\"t\">Tuple</span>.<span class=\"k\">class</span>)","location":{"filename":"src/json/deserializer.cr","line_number":61,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L61"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Tuple.class"}],"visibility":"Public","body":"@pull.read_begin_array\ntuple = Crystalizer.create_tuple(type) do |value_type|\n  deserialize(value_type)\nend\n@pull.read_end_array\ntuple\n"}},{"html_id":"deserialize(totype:NamedTuple.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"NamedTuple.class"}],"args_string":"(to type : NamedTuple.class)","args_html":"(to type : <span class=\"t\">NamedTuple</span>.<span class=\"k\">class</span>)","location":{"filename":"src/json/deserializer.cr","line_number":70,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L70"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"NamedTuple.class"}],"visibility":"Public","body":"deserializer = Crystalizer::Deserializer::NamedTupleObject.new(type)\n@pull.read_object do |key|\n  deserializer.set_value(key) do |value_type|\n    de_unionize(value_type)\n  end\nend\ndeserializer.named_tuple\n"}},{"html_id":"deserialize(totype:Enum.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Enum.class"}],"args_string":"(to type : Enum.class)","args_html":"(to type : <span class=\"t\">Enum</span>.<span class=\"k\">class</span>)","location":{"filename":"src/json/deserializer.cr","line_number":82,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L82"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Enum.class"}],"visibility":"Public","body":"deserialize_enum(type)"}},{"html_id":"deserialize(totype:Bool.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Bool.class"}],"args_string":"(to type : Bool.class)","args_html":"(to type : <span class=\"t\">Bool</span>.<span class=\"k\">class</span>)","location":{"filename":"src/json/deserializer.cr","line_number":98,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L98"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Bool.class"}],"visibility":"Public","body":"@pull.read_bool"}},{"html_id":"deserialize(totype:Nil.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Nil.class"}],"args_string":"(to type : Nil.class)","args_html":"(to type : <span class=\"t\">Nil</span>.<span class=\"k\">class</span>)","location":{"filename":"src/json/deserializer.cr","line_number":102,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L102"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Nil.class"}],"visibility":"Public","body":"@pull.read_null"}},{"html_id":"deserialize(totype:Path.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Path.class"}],"args_string":"(to type : Path.class)","args_html":"(to type : <span class=\"t\">Path</span>.<span class=\"k\">class</span>)","location":{"filename":"src/json/deserializer.cr","line_number":106,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L106"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Path.class"}],"visibility":"Public","body":"Path.new(@pull.read_string)"}},{"html_id":"deserialize(totype:String.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"String.class"}],"args_string":"(to type : String.class)","args_html":"(to type : <span class=\"t\">String</span>.<span class=\"k\">class</span>)","location":{"filename":"src/json/deserializer.cr","line_number":110,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L110"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"String.class"}],"visibility":"Public","body":"@pull.read_string"}},{"html_id":"deserialize(totype:Float.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Float.class"}],"args_string":"(to type : Float.class)","args_html":"(to type : <span class=\"t\">Float</span>.<span class=\"k\">class</span>)","location":{"filename":"src/json/deserializer.cr","line_number":114,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L114"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Float.class"}],"visibility":"Public","body":"type.new(case @pull.kind\nwhen .int?\n  value = @pull.int_value\n  @pull.read_next\n  value\nelse\n  @pull.read_float\nend)"}},{"html_id":"deserialize(totype:Int.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Int.class"}],"args_string":"(to type : Int.class)","args_html":"(to type : <span class=\"t\">Int</span>.<span class=\"k\">class</span>)","location":{"filename":"src/json/deserializer.cr","line_number":125,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L125"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Int.class"}],"visibility":"Public","body":"location = @pull.location\nvalue = @pull.read_int\nbegin\n  type.new(value)\nrescue ex : OverflowError\n  raise(::JSON::ParseException.new(\"Can't read #{type}\", *location, ex))\nend\n"}},{"html_id":"deserialize(totype:Time.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Time.class"}],"args_string":"(to type : Time.class)","args_html":"(to type : <span class=\"t\">Time</span>.<span class=\"k\">class</span>)","location":{"filename":"src/json/deserializer.cr","line_number":135,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L135"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Time.class"}],"visibility":"Public","body":"Time::Format::ISO_8601_DATE_TIME.parse(@pull.read_string)"}},{"html_id":"deserialize(totype:T.class):TforallT-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"T.class"}],"args_string":"(to type : T.class) : T forall T","args_html":"(to type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : T forall T","location":{"filename":"src/json/deserializer.cr","line_number":206,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/deserializer.cr#L206"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"T.class"}],"return_type":"T","visibility":"Public","body":"{% if T.union_types.size > 1 %}\n        deserialize_union type\n      {% else %}{% if ((T < Array || T < Deque) || T < Set) || T < Hash %}\n        deserialize type\n      {% else %}\n        deserializer = Crystalizer::Deserializer::SelfDescribingObject.new type\n        @pull.read_begin_object\n        while !@pull.kind.end_object?\n          key = @pull.read_object_key\n          deserializer.set_ivar key do |variable|\n            if variable.nilable || variable.has_default\n              @pull.read_null_or do\n                de_unionize variable.type\n              end\n            else\n              de_unionize variable.type\n            end\n          end\n        end\n        deserializer.object_instance\n      {% end %}{% end %}"}}]},{"html_id":"crystalizer/Crystalizer/JSON/Error","path":"Crystalizer/JSON/Error.html","kind":"class","full_name":"Crystalizer::JSON::Error","name":"Error","abstract":false,"superclass":{"html_id":"crystalizer/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crystalizer/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crystalizer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalizer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/json.cr","line_number":13,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json.cr#L13"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crystalizer/Crystalizer/JSON","kind":"module","full_name":"Crystalizer::JSON","name":"JSON"}},{"html_id":"crystalizer/Crystalizer/JSON/Serializer","path":"Crystalizer/JSON/Serializer.html","kind":"struct","full_name":"Crystalizer::JSON::Serializer","name":"Serializer","abstract":false,"superclass":{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crystalizer/Crystalizer/Serializer","kind":"module","full_name":"Crystalizer::Serializer","name":"Serializer"},{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crystalizer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crystalizer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/json/serializer.cr","line_number":15,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L15"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"crystalizer/Crystalizer/Serializer","kind":"module","full_name":"Crystalizer::Serializer","name":"Serializer"}],"namespace":{"html_id":"crystalizer/Crystalizer/JSON","kind":"module","full_name":"Crystalizer::JSON","name":"JSON"},"class_methods":[{"html_id":"indent:String-class-method","name":"indent","abstract":false,"location":{"filename":"src/json/serializer.cr","line_number":18,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L18"},"def":{"name":"indent","return_type":"String","visibility":"Public","body":"@@indent"}},{"html_id":"indent=(indent:String)-class-method","name":"indent=","abstract":false,"args":[{"name":"indent","external_name":"indent","restriction":"String"}],"args_string":"(indent : String)","args_html":"(indent : String)","location":{"filename":"src/json/serializer.cr","line_number":18,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L18"},"def":{"name":"indent=","args":[{"name":"indent","external_name":"indent","restriction":"String"}],"visibility":"Public","body":"@@indent = indent"}},{"html_id":"serialize_object_key(null:Nil)-class-method","name":"serialize_object_key","abstract":false,"args":[{"name":"null","external_name":"null","restriction":"Nil"}],"args_string":"(null : Nil)","args_html":"(null : Nil)","location":{"filename":"src/json/serializer.cr","line_number":121,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L121"},"def":{"name":"serialize_object_key","args":[{"name":"null","external_name":"null","restriction":"Nil"}],"visibility":"Public","body":"\"\""}},{"html_id":"serialize_object_key(any:Crystalizer::Any)-class-method","name":"serialize_object_key","abstract":false,"args":[{"name":"any","external_name":"any","restriction":"Crystalizer::Any"}],"args_string":"(any : Crystalizer::Any)","args_html":"(any : <a href=\"../../Crystalizer/Any.html\">Crystalizer::Any</a>)","location":{"filename":"src/json/serializer.cr","line_number":125,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L125"},"def":{"name":"serialize_object_key","args":[{"name":"any","external_name":"any","restriction":"Crystalizer::Any"}],"visibility":"Public","body":"serialize_object_key(any.to(((Path | String) | Symbol) | Number::Primitive))"}},{"html_id":"serialize_object_key(object:Path|String|Symbol|Number::Primitive)-class-method","name":"serialize_object_key","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"Path | String | Symbol | Number::Primitive"}],"args_string":"(object : Path | String | Symbol | Number::Primitive)","args_html":"(object : Path | String | Symbol | Number::Primitive)","location":{"filename":"src/json/serializer.cr","line_number":129,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L129"},"def":{"name":"serialize_object_key","args":[{"name":"object","external_name":"object","restriction":"Path | String | Symbol | Number::Primitive"}],"visibility":"Public","body":"object.to_s"}}],"constructors":[{"html_id":"new(builder:::JSON::Builder)-class-method","name":"new","abstract":false,"args":[{"name":"builder","external_name":"builder","restriction":"::JSON::Builder"}],"args_string":"(builder : ::JSON::Builder)","args_html":"(builder : ::JSON::Builder)","location":{"filename":"src/json/serializer.cr","line_number":20,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L20"},"def":{"name":"new","args":[{"name":"builder","external_name":"builder","restriction":"::JSON::Builder"}],"visibility":"Public","body":"_ = allocate\n_.initialize(builder)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(io:IO,&:Serializer->):Nil-class-method","name":"new","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO, & : Serializer -> ) : Nil","args_html":"(io : IO, & : <a href=\"../../Crystalizer/JSON/Serializer.html\">Serializer</a> -> ) : Nil","location":{"filename":"src/json/serializer.cr","line_number":23,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L23"},"def":{"name":"new","args":[{"name":"io","external_name":"io","restriction":"IO"}],"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(Serializer ->)"},"return_type":"Nil","visibility":"Public","body":"::JSON.build(io) do |builder|\n  yield Serializer.new(builder)\nend"}}],"instance_methods":[{"html_id":"indent=(value:String)-instance-method","name":"indent=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : String)","location":{"filename":"src/json/serializer.cr","line_number":29,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L29"},"def":{"name":"indent=","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"@builder.indent = value"}},{"html_id":"serialize(object:Crystalizer::Type)-instance-method","name":"serialize","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"Crystalizer::Type"}],"args_string":"(object : Crystalizer::Type)","args_html":"(object : <a href=\"../../Crystalizer/Type.html\">Crystalizer::Type</a>)","location":{"filename":"src/json/serializer.cr","line_number":16,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L16"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":"Crystalizer::Type"}],"visibility":"Public","body":"object.serialize(self)"}},{"html_id":"serialize(object:Crystalizer::Any)-instance-method","name":"serialize","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"Crystalizer::Any"}],"args_string":"(object : Crystalizer::Any)","args_html":"(object : <a href=\"../../Crystalizer/Any.html\">Crystalizer::Any</a>)","location":{"filename":"src/json/serializer.cr","line_number":49,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L49"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":"Crystalizer::Any"}],"visibility":"Public","body":"serialize(object.raw)"}},{"html_id":"serialize(object:::JSON::Serializable)-instance-method","name":"serialize","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"::JSON::Serializable"}],"args_string":"(object : ::JSON::Serializable)","args_html":"(object : ::JSON::Serializable)","location":{"filename":"src/json/serializer.cr","line_number":53,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L53"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":"::JSON::Serializable"}],"visibility":"Public","body":"object.to_json(builder)"}},{"html_id":"serialize(hash:Hash)-instance-method","name":"serialize","abstract":false,"args":[{"name":"hash","external_name":"hash","restriction":"Hash"}],"args_string":"(hash : Hash)","args_html":"(hash : Hash)","location":{"filename":"src/json/serializer.cr","line_number":57,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L57"},"def":{"name":"serialize","args":[{"name":"hash","external_name":"hash","restriction":"Hash"}],"visibility":"Public","body":"@builder.object do\n  hash.each do |key, value|\n    @builder.field(self.class.serialize_object_key(key)) do\n      serialize(value)\n    end\n  end\nend"}},{"html_id":"serialize(array:Array|Deque|Set|Tuple)-instance-method","name":"serialize","abstract":false,"args":[{"name":"array","external_name":"array","restriction":"Array | Deque | Set | Tuple"}],"args_string":"(array : Array | Deque | Set | Tuple)","args_html":"(array : Array | Deque | Set | Tuple)","location":{"filename":"src/json/serializer.cr","line_number":67,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L67"},"def":{"name":"serialize","args":[{"name":"array","external_name":"array","restriction":"Array | Deque | Set | Tuple"}],"visibility":"Public","body":"@builder.array do\n  array.each do |value|\n    serialize(value)\n  end\nend"}},{"html_id":"serialize(named_tuple:NamedTuple)-instance-method","name":"serialize","abstract":false,"args":[{"name":"named_tuple","external_name":"named_tuple","restriction":"NamedTuple"}],"args_string":"(named_tuple : NamedTuple)","args_html":"(named_tuple : NamedTuple)","location":{"filename":"src/json/serializer.cr","line_number":75,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L75"},"def":{"name":"serialize","args":[{"name":"named_tuple","external_name":"named_tuple","restriction":"NamedTuple"}],"visibility":"Public","body":"@builder.object do\n  named_tuple.each do |key, value|\n    @builder.field(key) do\n      serialize(value)\n    end\n  end\nend"}},{"html_id":"serialize(bool:Bool)-instance-method","name":"serialize","abstract":false,"args":[{"name":"bool","external_name":"bool","restriction":"Bool"}],"args_string":"(bool : Bool)","args_html":"(bool : Bool)","location":{"filename":"src/json/serializer.cr","line_number":85,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L85"},"def":{"name":"serialize","args":[{"name":"bool","external_name":"bool","restriction":"Bool"}],"visibility":"Public","body":"@builder.bool(bool)"}},{"html_id":"serialize(object:Enum)-instance-method","name":"serialize","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"Enum"}],"args_string":"(object : Enum)","args_html":"(object : Enum)","location":{"filename":"src/json/serializer.cr","line_number":89,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L89"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":"Enum"}],"visibility":"Public","body":"serialize_enum(object)"}},{"html_id":"serialize(null:Nil)-instance-method","name":"serialize","abstract":false,"args":[{"name":"null","external_name":"null","restriction":"Nil"}],"args_string":"(null : Nil)","args_html":"(null : Nil)","location":{"filename":"src/json/serializer.cr","line_number":105,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L105"},"def":{"name":"serialize","args":[{"name":"null","external_name":"null","restriction":"Nil"}],"visibility":"Public","body":"@builder.null"}},{"html_id":"serialize(number:Number::Primitive)-instance-method","name":"serialize","abstract":false,"args":[{"name":"number","external_name":"number","restriction":"Number::Primitive"}],"args_string":"(number : Number::Primitive)","args_html":"(number : Number::Primitive)","location":{"filename":"src/json/serializer.cr","line_number":109,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L109"},"def":{"name":"serialize","args":[{"name":"number","external_name":"number","restriction":"Number::Primitive"}],"visibility":"Public","body":"@builder.number(number)"}},{"html_id":"serialize(object:Path|String|Symbol)-instance-method","name":"serialize","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"Path | String | Symbol"}],"args_string":"(object : Path | String | Symbol)","args_html":"(object : Path | String | Symbol)","location":{"filename":"src/json/serializer.cr","line_number":113,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L113"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":"Path | String | Symbol"}],"visibility":"Public","body":"@builder.string(object.to_s)"}},{"html_id":"serialize(time:Time)-instance-method","name":"serialize","abstract":false,"args":[{"name":"time","external_name":"time","restriction":"Time"}],"args_string":"(time : Time)","args_html":"(time : Time)","location":{"filename":"src/json/serializer.cr","line_number":117,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L117"},"def":{"name":"serialize","args":[{"name":"time","external_name":"time","restriction":"Time"}],"visibility":"Public","body":"@builder.string(Time::Format::RFC_3339.format(time, fraction_digits: 0))"}},{"html_id":"serialize(object:O):NilforallO-instance-method","name":"serialize","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"O"}],"args_string":"(object : O) : Nil forall O","args_html":"(object : O) : Nil forall O","location":{"filename":"src/json/serializer.cr","line_number":39,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/json/serializer.cr#L39"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":"O"}],"return_type":"Nil","visibility":"Public","body":"@builder.object do\n  Crystalizer.each_ivar(object) do |key, value|\n    @builder.field(key) do\n      de_unionize(value)\n    end\n  end\nend"}}]}]},{"html_id":"crystalizer/Crystalizer/Object","path":"Crystalizer/Object.html","kind":"annotation","full_name":"Crystalizer::Object","name":"Object","abstract":false,"locations":[{"filename":"src/object.cr","line_number":14,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/object.cr#L14"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crystalizer/Crystalizer","kind":"module","full_name":"Crystalizer","name":"Crystalizer"},"doc":"Annotation to add information of how (de)serialize the object.\n\n`fields_order` takes a list of instance variable, used to explicitly define the (de)serialization order.\nIt matters for some protocols (like binary/bytes-oriented ones).\nThis option can also be used to only (de)serialize a set of instance variables, and ignore those not.\n\n```\n@[Crystalizer::Object(fields_order: %w(var other))]\nstruct Strukt\n  @var : Int32\n  @other : String\nend\n```","summary":"<p>Annotation to add information of how (de)serialize the object.</p>"},{"html_id":"crystalizer/Crystalizer/Serializer","path":"Crystalizer/Serializer.html","kind":"module","full_name":"Crystalizer::Serializer","name":"Serializer","abstract":false,"locations":[{"filename":"src/serializer.cr","line_number":4,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/serializer.cr#L4"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"crystalizer/Crystalizer/ByteFormat","kind":"struct","full_name":"Crystalizer::ByteFormat","name":"ByteFormat"},{"html_id":"crystalizer/Crystalizer/JSON/Serializer","kind":"struct","full_name":"Crystalizer::JSON::Serializer","name":"Serializer"},{"html_id":"crystalizer/Crystalizer/YAML/Serializer","kind":"struct","full_name":"Crystalizer::YAML::Serializer","name":"Serializer"}],"namespace":{"html_id":"crystalizer/Crystalizer","kind":"module","full_name":"Crystalizer","name":"Crystalizer"},"doc":"Serializer interface to be included","summary":"<p>Serializer interface to be included</p>","instance_methods":[{"html_id":"serialize(object:O)forallO-instance-method","name":"serialize","abstract":true,"args":[{"name":"object","external_name":"object","restriction":"O"}],"args_string":"(object : O) forall O","args_html":"(object : O) forall O","location":{"filename":"src/serializer.cr","line_number":5,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/serializer.cr#L5"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":"O"}],"visibility":"Public","body":""}}]},{"html_id":"crystalizer/Crystalizer/Type","path":"Crystalizer/Type.html","kind":"module","full_name":"Crystalizer::Type","name":"Type","abstract":false,"locations":[{"filename":"src/type.cr","line_number":22,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/type.cr#L22"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crystalizer/Crystalizer","kind":"module","full_name":"Crystalizer","name":"Crystalizer"},"doc":"Including this type allows to define custom serialization and deserialization for a given type.\n\n```\nstruct MyType\n  include Crystalizer::Type\n\n  def initialize(@i : Int32)\n  end\n\n  def self.deserialize(deserializer : Crystalizer::Deserializer)\n    new deserializer.deserialize to: Int32\n  end\n\n  def serialize(serializer : Crystalizer::Serializer) : Nil\n    serializer.serialize @i\n  end\nend\n```","summary":"<p>Including this type allows to define custom serialization and deserialization for a given type.</p>","instance_methods":[{"html_id":"serialize(serializer:Crystalizer::Serializer):Nil-instance-method","name":"serialize","abstract":true,"args":[{"name":"serializer","external_name":"serializer","restriction":"Crystalizer::Serializer"}],"args_string":"(serializer : Crystalizer::Serializer) : Nil","args_html":"(serializer : <a href=\"../Crystalizer/Serializer.html\">Crystalizer::Serializer</a>) : Nil","location":{"filename":"src/type.cr","line_number":23,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/type.cr#L23"},"def":{"name":"serialize","args":[{"name":"serializer","external_name":"serializer","restriction":"Crystalizer::Serializer"}],"return_type":"Nil","visibility":"Public","body":""}}]},{"html_id":"crystalizer/Crystalizer/Variable","path":"Crystalizer/Variable.html","kind":"struct","full_name":"Crystalizer::Variable(T, A)","name":"Variable","abstract":false,"superclass":{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crystalizer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crystalizer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/variable.cr","line_number":2,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/variable.cr#L2"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crystalizer/Crystalizer","kind":"module","full_name":"Crystalizer","name":"Crystalizer"},"doc":"Holds variable metadata with its annotations.","summary":"<p>Holds variable metadata with its annotations.</p>","constructors":[{"html_id":"new(type:T.class,annotations:A,nilable:Bool,has_default:Bool)-class-method","name":"new","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"T.class"},{"name":"annotations","external_name":"annotations","restriction":"A"},{"name":"nilable","external_name":"nilable","restriction":"Bool"},{"name":"has_default","external_name":"has_default","restriction":"Bool"}],"args_string":"(type : T.class, annotations : A, nilable : Bool, has_default : Bool)","args_html":"(type : <span class=\"t\">T</span>.<span class=\"k\">class</span>, annotations : A, nilable : Bool, has_default : Bool)","location":{"filename":"src/variable.cr","line_number":8,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/variable.cr#L8"},"def":{"name":"new","args":[{"name":"type","external_name":"type","restriction":"T.class"},{"name":"annotations","external_name":"annotations","restriction":"A"},{"name":"nilable","external_name":"nilable","restriction":"Bool"},{"name":"has_default","external_name":"has_default","restriction":"Bool"}],"visibility":"Public","body":"_ = Variable(T, A).allocate\n_.initialize(type, annotations, nilable, has_default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"annotations:A-instance-method","name":"annotations","abstract":false,"location":{"filename":"src/variable.cr","line_number":6,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/variable.cr#L6"},"def":{"name":"annotations","return_type":"A","visibility":"Public","body":"@annotations"}},{"html_id":"has_default:Bool-instance-method","name":"has_default","abstract":false,"location":{"filename":"src/variable.cr","line_number":5,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/variable.cr#L5"},"def":{"name":"has_default","return_type":"Bool","visibility":"Public","body":"@has_default"}},{"html_id":"nilable:Bool-instance-method","name":"nilable","abstract":false,"location":{"filename":"src/variable.cr","line_number":4,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/variable.cr#L4"},"def":{"name":"nilable","return_type":"Bool","visibility":"Public","body":"@nilable"}},{"html_id":"type:T.class-instance-method","name":"type","abstract":false,"location":{"filename":"src/variable.cr","line_number":3,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/variable.cr#L3"},"def":{"name":"type","return_type":"T.class","visibility":"Public","body":"@type"}}]},{"html_id":"crystalizer/Crystalizer/YAML","path":"Crystalizer/YAML.html","kind":"module","full_name":"Crystalizer::YAML","name":"YAML","abstract":false,"locations":[{"filename":"src/yaml.cr","line_number":10,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml.cr#L10"},{"filename":"src/yaml/any.cr","line_number":1,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/any.cr#L1"},{"filename":"src/yaml/deserializer.cr","line_number":1,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L1"},{"filename":"src/yaml/serializer.cr","line_number":1,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/serializer.cr#L1"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"crystalizer/Crystalizer/Format","kind":"module","full_name":"Crystalizer::Format","name":"Format"}],"namespace":{"html_id":"crystalizer/Crystalizer","kind":"module","full_name":"Crystalizer","name":"Crystalizer"},"class_methods":[{"html_id":"deserialize(io:IO,totype:T.class):TforallT-class-method","name":"deserialize","doc":"Deserializes a YAML document to a given type `T`.","summary":"<p>Deserializes a YAML document to a given type <code>T</code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"type","external_name":"to","restriction":"T.class"}],"args_string":"(io : IO, to type : T.class) : T forall T","args_html":"(io : IO, to type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : T forall T","location":{"filename":"src/yaml/deserializer.cr","line_number":3,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L3"},"def":{"name":"deserialize","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"type","external_name":"to","restriction":"T.class"}],"return_type":"T","visibility":"Public","body":"(Deserializer.new(io)).deserialize(to: type)"}},{"html_id":"deserialize(string:String,totype:T.class):TforallT-class-method","name":"deserialize","doc":"Deserializes a YAML document to a given type `T`.","summary":"<p>Deserializes a YAML document to a given type <code>T</code>.</p>","abstract":false,"args":[{"name":"string","external_name":"string","restriction":"String"},{"name":"type","external_name":"to","restriction":"T.class"}],"args_string":"(string : String, to type : T.class) : T forall T","args_html":"(string : String, to type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : T forall T","location":{"filename":"src/yaml/deserializer.cr","line_number":8,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L8"},"def":{"name":"deserialize","args":[{"name":"string","external_name":"string","restriction":"String"},{"name":"type","external_name":"to","restriction":"T.class"}],"return_type":"T","visibility":"Public","body":"(Deserializer.new(string)).deserialize(to: type)"}},{"html_id":"parse(string_or_io:String|IO):Any-class-method","name":"parse","doc":"Deserializes a YAML document according to the core schema.","summary":"<p>Deserializes a YAML document according to the core schema.</p>","abstract":false,"args":[{"name":"string_or_io","external_name":"string_or_io","restriction":"String | IO"}],"args_string":"(string_or_io : String | IO) : Any","args_html":"(string_or_io : String | IO) : <a href=\"../Crystalizer/YAML/Any.html\">Any</a>","location":{"filename":"src/yaml/deserializer.cr","line_number":13,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L13"},"def":{"name":"parse","args":[{"name":"string_or_io","external_name":"string_or_io","restriction":"String | IO"}],"return_type":"Any","visibility":"Public","body":"deserialize(string_or_io, Any)"}},{"html_id":"serialize(io:IO,object):Nil-class-method","name":"serialize","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"object","external_name":"object","restriction":""}],"args_string":"(io : IO, object) : Nil","args_html":"(io : IO, object) : Nil","location":{"filename":"src/yaml/serializer.cr","line_number":8,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/serializer.cr#L8"},"def":{"name":"serialize","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"object","external_name":"object","restriction":""}],"return_type":"Nil","visibility":"Public","body":"Serializer.new(io, &.serialize(object))"}},{"html_id":"serialize(object):String-class-method","name":"serialize","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object) : String","args_html":"(object) : String","location":{"filename":"src/yaml/serializer.cr","line_number":2,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/serializer.cr#L2"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":""}],"return_type":"String","visibility":"Public","body":"String.build do |str|\n  serialize(str, object)\nend"}}],"types":[{"html_id":"crystalizer/Crystalizer/YAML/Any","path":"Crystalizer/YAML/Any.html","kind":"struct","full_name":"Crystalizer::YAML::Any","name":"Any","abstract":false,"superclass":{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crystalizer/Crystalizer/Any","kind":"module","full_name":"Crystalizer::Any","name":"Any"},{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crystalizer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crystalizer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/yaml/any.cr","line_number":1,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/any.cr#L1"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"crystalizer/Crystalizer/Any","kind":"module","full_name":"Crystalizer::Any","name":"Any"}],"namespace":{"html_id":"crystalizer/Crystalizer/YAML","kind":"module","full_name":"Crystalizer::YAML","name":"YAML"},"constructors":[{"html_id":"new(ctx:::YAML::ParseContext,node:::YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : ::YAML::ParseContext, node : ::YAML::Nodes::Node)","args_html":"(ctx : ::YAML::ParseContext, node : ::YAML::Nodes::Node)","location":{"filename":"src/yaml/any.cr","line_number":13,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/any.cr#L13"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"anchors = Hash(String, Any).new\nconvert(node, anchors)\n"}},{"html_id":"new(raw:Type)-class-method","name":"new","abstract":false,"args":[{"name":"raw","external_name":"raw","restriction":"Type"}],"args_string":"(raw : Type)","args_html":"(raw : <a href=\"../../Crystalizer/YAML/Any/Type.html\">Type</a>)","location":{"filename":"src/yaml/any.cr","line_number":10,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/any.cr#L10"},"def":{"name":"new","args":[{"name":"raw","external_name":"raw","restriction":"Type"}],"visibility":"Public","body":"_ = allocate\n_.initialize(raw)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"raw:Type-instance-method","name":"raw","doc":"Returns the raw underlying value.","summary":"<p>Returns the raw underlying value.</p>","abstract":false,"location":{"filename":"src/yaml/any.cr","line_number":8,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/any.cr#L8"},"def":{"name":"raw","return_type":"Type","visibility":"Public","body":"@raw"}}],"types":[{"html_id":"crystalizer/Crystalizer/YAML/Any/Error","path":"Crystalizer/YAML/Any/Error.html","kind":"class","full_name":"Crystalizer::YAML::Any::Error","name":"Error","abstract":false,"superclass":{"html_id":"crystalizer/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crystalizer/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crystalizer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalizer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/yaml/any.cr","line_number":5,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/any.cr#L5"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crystalizer/Crystalizer/YAML/Any","kind":"struct","full_name":"Crystalizer::YAML::Any","name":"Any"}},{"html_id":"crystalizer/Crystalizer/YAML/Any/Type","path":"Crystalizer/YAML/Any/Type.html","kind":"alias","full_name":"Crystalizer::YAML::Any::Type","name":"Type","abstract":false,"locations":[{"filename":"src/yaml/any.cr","line_number":3,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/any.cr#L3"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":true,"aliased":"(Array(Crystalizer::Any) | Bool | Float64 | Hash(Crystalizer::Any, Crystalizer::Any) | Int64 | Slice(UInt8) | String | Time | Nil)","aliased_html":"Array(<a href=\"../../../Crystalizer/Any.html\">Crystalizer::Any</a>) | Bool | Float64 | Hash(<a href=\"../../../Crystalizer/Any.html\">Crystalizer::Any</a>, <a href=\"../../../Crystalizer/Any.html\">Crystalizer::Any</a>) | Int64 | Slice(UInt8) | String | Time | Nil","const":false,"namespace":{"html_id":"crystalizer/Crystalizer/YAML/Any","kind":"struct","full_name":"Crystalizer::YAML::Any","name":"Any"}}]},{"html_id":"crystalizer/Crystalizer/YAML/Deserializer","path":"Crystalizer/YAML/Deserializer.html","kind":"struct","full_name":"Crystalizer::YAML::Deserializer","name":"Deserializer","abstract":false,"superclass":{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crystalizer/Crystalizer/Deserializer","kind":"module","full_name":"Crystalizer::Deserializer","name":"Deserializer"},{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crystalizer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crystalizer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/yaml/deserializer.cr","line_number":17,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L17"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"crystalizer/Crystalizer/Deserializer","kind":"module","full_name":"Crystalizer::Deserializer","name":"Deserializer"}],"namespace":{"html_id":"crystalizer/Crystalizer/YAML","kind":"module","full_name":"Crystalizer::YAML","name":"YAML"},"constructors":[{"html_id":"new(context:::YAML::ParseContext,node:::YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(context : ::YAML::ParseContext, node : ::YAML::Nodes::Node)","args_html":"(context : ::YAML::ParseContext, node : ::YAML::Nodes::Node)","location":{"filename":"src/yaml/deserializer.cr","line_number":20,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L20"},"def":{"name":"new","args":[{"name":"context","external_name":"context","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"_ = allocate\n_.initialize(context, node)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(string_or_io:String|IO):Deserializer-class-method","name":"new","abstract":false,"args":[{"name":"string_or_io","external_name":"string_or_io","restriction":"String | IO"}],"args_string":"(string_or_io : String | IO) : Deserializer","args_html":"(string_or_io : String | IO) : <a href=\"../../Crystalizer/YAML/Deserializer.html\">Deserializer</a>","location":{"filename":"src/yaml/deserializer.cr","line_number":23,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L23"},"def":{"name":"new","args":[{"name":"string_or_io","external_name":"string_or_io","restriction":"String | IO"}],"return_type":"Deserializer","visibility":"Public","body":"document = ::YAML::Nodes.parse(string_or_io)\nnode = document.nodes.first? || (begin\n  scalar = ::YAML::Nodes::Scalar.new(\"\")\n  scalar.style = ::YAML::ScalarStyle::PLAIN\n  scalar\nend)\nnew(::YAML::ParseContext.new, node)\n"}}],"instance_methods":[{"html_id":"deserialize(totype:Crystalizer::Type.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Crystalizer::Type.class"}],"args_string":"(to type : Crystalizer::Type.class)","args_html":"(to type : <span class=\"t\">Crystalizer</span><span class=\"t\">::</span><span class=\"t\">Type</span>.<span class=\"k\">class</span>)","location":{"filename":"src/yaml/deserializer.cr","line_number":18,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L18"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Crystalizer::Type.class"}],"visibility":"Public","body":"type.deserialize(self)"}},{"html_id":"deserialize(totype:::YAML::Serializable.class|Any.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"::YAML::Serializable.class | Any.class"}],"args_string":"(to type : ::YAML::Serializable.class | Any.class)","args_html":"(to type : <span class=\"t\">::</span><span class=\"t\">YAML</span><span class=\"t\">::</span><span class=\"t\">Serializable</span>.<span class=\"k\">class</span> | <span class=\"t\">Any</span>.<span class=\"k\">class</span>)","location":{"filename":"src/yaml/deserializer.cr","line_number":41,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L41"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"::YAML::Serializable.class | Any.class"}],"visibility":"Public","body":"type.new(@context, @node)"}},{"html_id":"deserialize(totype:Hash.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Hash.class"}],"args_string":"(to type : Hash.class)","args_html":"(to type : <span class=\"t\">Hash</span>.<span class=\"k\">class</span>)","location":{"filename":"src/yaml/deserializer.cr","line_number":69,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L69"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Hash.class"}],"visibility":"Public","body":"node = @node\n@context.read_alias(@node, type) do |obj|\n  return obj\nend\nif !node.is_a?(::YAML::Nodes::Mapping)\n  node.raise(\"Expected mapping, not #{node.class}\")\nend\nhash = type.new\nkey_class, value_class = typeof(hash.first)\n@context.record_anchor(node, hash)\n::YAML::Schema::Core.each(node) do |key_node, value_node|\n  hash[(new(key_node)).deserialize(key_class)] = (new(value_node)).deserialize(value_class)\nend\nhash\n"}},{"html_id":"deserialize(totype:Array.class|Deque.class|Set.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Array.class | Deque.class | Set.class"}],"args_string":"(to type : Array.class | Deque.class | Set.class)","args_html":"(to type : <span class=\"t\">Array</span>.<span class=\"k\">class</span> | <span class=\"t\">Deque</span>.<span class=\"k\">class</span> | <span class=\"t\">Set</span>.<span class=\"k\">class</span>)","location":{"filename":"src/yaml/deserializer.cr","line_number":89,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L89"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Array.class | Deque.class | Set.class"}],"visibility":"Public","body":"node = @node\n@context.read_alias(node, type) do |obj|\n  return obj\nend\nif !node.is_a?(::YAML::Nodes::Sequence)\n  node.raise(\"Expected sequence, not #{node.class}\")\nend\narray = type.new\nvalue_class = typeof(array.first)\n@context.record_anchor(node, array)\nnode.each do |value_node|\n  array << ((new(value_node)).deserialize(value_class))\nend\narray\n"}},{"html_id":"deserialize(totype:Tuple.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Tuple.class"}],"args_string":"(to type : Tuple.class)","args_html":"(to type : <span class=\"t\">Tuple</span>.<span class=\"k\">class</span>)","location":{"filename":"src/yaml/deserializer.cr","line_number":115,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L115"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Tuple.class"}],"visibility":"Public","body":"node = @node\nif !node.is_a?(::YAML::Nodes::Sequence)\n  node.raise(\"Expected sequence, not #{node.class}\")\nend\ncheck_tuple_size(node, type)\ni = -1\nCrystalizer.create_tuple(type) do |value_type|\n  i = i + 1\n  (new(node.nodes[i])).deserialize(value_type)\nend\n"}},{"html_id":"deserialize(totype:::NamedTuple.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"::NamedTuple.class"}],"args_string":"(to type : ::NamedTuple.class)","args_html":"(to type : <span class=\"t\">::</span><span class=\"t\">NamedTuple</span>.<span class=\"k\">class</span>)","location":{"filename":"src/yaml/deserializer.cr","line_number":129,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L129"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"::NamedTuple.class"}],"visibility":"Public","body":"node = @node\nif !node.is_a?(::YAML::Nodes::Mapping)\n  node.raise(\"Expected mapping, not #{node.class}\")\nend\ndeserializer = Crystalizer::Deserializer::NamedTupleObject.new(type)\n::YAML::Schema::Core.each(node) do |key_node, value_node|\n  key = String.new(@context, key_node)\n  deserializer.set_value(key) do |value_type|\n    (new(value_node)).de_unionize(value_type)\n  end\nend\ndeserializer.named_tuple\n"}},{"html_id":"deserialize(totype:Enum.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Enum.class"}],"args_string":"(to type : Enum.class)","args_html":"(to type : <span class=\"t\">Enum</span>.<span class=\"k\">class</span>)","location":{"filename":"src/yaml/deserializer.cr","line_number":146,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L146"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Enum.class"}],"visibility":"Public","body":"deserialize_enum(type)"}},{"html_id":"deserialize(totype:Bool.class|Nil.class|Time.class|Slice(UInt8).class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Bool.class | Nil.class | Time.class | Slice(UInt8).class"}],"args_string":"(to type : Bool.class | Nil.class | Time.class | Slice(UInt8).class)","args_html":"(to type : <span class=\"t\">Bool</span>.<span class=\"k\">class</span> | <span class=\"t\">Nil</span>.<span class=\"k\">class</span> | <span class=\"t\">Time</span>.<span class=\"k\">class</span> | <span class=\"t\">Slice</span>(<span class=\"t\">UInt8</span>).<span class=\"k\">class</span>)","location":{"filename":"src/yaml/deserializer.cr","line_number":171,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L171"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Bool.class | Nil.class | Time.class | Slice(UInt8).class"}],"visibility":"Public","body":"parse_scalar(type)"}},{"html_id":"deserialize(tofloat:Float.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"float","external_name":"to","restriction":"Float.class"}],"args_string":"(to float : Float.class)","args_html":"(to float : <span class=\"t\">Float</span>.<span class=\"k\">class</span>)","location":{"filename":"src/yaml/deserializer.cr","line_number":175,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L175"},"def":{"name":"deserialize","args":[{"name":"float","external_name":"to","restriction":"Float.class"}],"visibility":"Public","body":"float.new!(parse_scalar(Float64))"}},{"html_id":"deserialize(toint:Int.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"int","external_name":"to","restriction":"Int.class"}],"args_string":"(to int : Int.class)","args_html":"(to int : <span class=\"t\">Int</span>.<span class=\"k\">class</span>)","location":{"filename":"src/yaml/deserializer.cr","line_number":179,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L179"},"def":{"name":"deserialize","args":[{"name":"int","external_name":"to","restriction":"Int.class"}],"visibility":"Public","body":"int.new!(parse_scalar(Int64))"}},{"html_id":"deserialize(totype:Path.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"Path.class"}],"args_string":"(to type : Path.class)","args_html":"(to type : <span class=\"t\">Path</span>.<span class=\"k\">class</span>)","location":{"filename":"src/yaml/deserializer.cr","line_number":183,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L183"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"Path.class"}],"visibility":"Public","body":"Path.new(deserialize(String))"}},{"html_id":"deserialize(totype:String.class)-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"String.class"}],"args_string":"(to type : String.class)","args_html":"(to type : <span class=\"t\">String</span>.<span class=\"k\">class</span>)","location":{"filename":"src/yaml/deserializer.cr","line_number":187,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L187"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"String.class"}],"visibility":"Public","body":"@context.read_alias(@node, String) do |obj|\n  return obj\nend\nif (node = @node).is_a?(::YAML::Nodes::Scalar)\n  value = node.value\n  @context.record_anchor(node, value)\n  value\nelse\n  @node.raise(\"Expected String, not #{@node.class.name}\")\nend\n"}},{"html_id":"deserialize(totype:T.class):TforallT-instance-method","name":"deserialize","abstract":false,"args":[{"name":"type","external_name":"to","restriction":"T.class"}],"args_string":"(to type : T.class) : T forall T","args_html":"(to type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : T forall T","location":{"filename":"src/yaml/deserializer.cr","line_number":242,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L242"},"def":{"name":"deserialize","args":[{"name":"type","external_name":"to","restriction":"T.class"}],"return_type":"T","visibility":"Public","body":"{% if T.union_types.size > 1 %}\n        deserialize_union type\n      {% else %}{% if ((T < Array || T < Deque) || T < Set) || T < Hash %}\n        deserialize type\n      {% else %}\n        deserializer = Crystalizer::Deserializer::SelfDescribingObject.new type\n        case node = @node\n        when ::YAML::Nodes::Mapping\n          ::YAML::Schema::Core.each(node) do |key_node, value_node|\n            unless key_node.is_a?(::YAML::Nodes::Scalar)\n              key_node.raise \"Expected scalar as key for mapping\"\n            end\n\n            key = key_node.value\n            deserializer.set_ivar key do |variable|\n              if variable.nilable || variable.has_default\n                ::YAML::Schema::Core.parse_null_or(value_node) do\n                  new(value_node).de_unionize variable.type\n                end\n              else\n                new(value_node).de_unionize variable.type\n              end\n            end\n          end\n        when ::YAML::Nodes::Scalar\n          if node.value.empty? && node.style.plain? && !node.tag\n            # We consider an empty scalar as an empty mapping\n          else\n            node.raise \"Expected mapping, not #{node.class}\"\n          end\n        else\n          node.raise \"Expected mapping, not #{node.class}\"\n        end\n        deserializer.object_instance\n      {% end %}{% end %}"}},{"html_id":"new(node:::YAML::Nodes::Node)-instance-method","name":"new","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(node : ::YAML::Nodes::Node)","args_html":"(node : ::YAML::Nodes::Node)","location":{"filename":"src/yaml/deserializer.cr","line_number":37,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/deserializer.cr#L37"},"def":{"name":"new","args":[{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"self.class.new(@context, node)"}}]},{"html_id":"crystalizer/Crystalizer/YAML/Error","path":"Crystalizer/YAML/Error.html","kind":"class","full_name":"Crystalizer::YAML::Error","name":"Error","abstract":false,"superclass":{"html_id":"crystalizer/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crystalizer/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crystalizer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalizer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/yaml.cr","line_number":13,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml.cr#L13"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crystalizer/Crystalizer/YAML","kind":"module","full_name":"Crystalizer::YAML","name":"YAML"}},{"html_id":"crystalizer/Crystalizer/YAML/Serializer","path":"Crystalizer/YAML/Serializer.html","kind":"struct","full_name":"Crystalizer::YAML::Serializer","name":"Serializer","abstract":false,"superclass":{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crystalizer/Crystalizer/Serializer","kind":"module","full_name":"Crystalizer::Serializer","name":"Serializer"},{"html_id":"crystalizer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crystalizer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crystalizer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/yaml/serializer.cr","line_number":12,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/serializer.cr#L12"}],"repository_name":"crystalizer","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"crystalizer/Crystalizer/Serializer","kind":"module","full_name":"Crystalizer::Serializer","name":"Serializer"}],"namespace":{"html_id":"crystalizer/Crystalizer/YAML","kind":"module","full_name":"Crystalizer::YAML","name":"YAML"},"constructors":[{"html_id":"new(builder:::YAML::Nodes::Builder)-class-method","name":"new","abstract":false,"args":[{"name":"builder","external_name":"builder","restriction":"::YAML::Nodes::Builder"}],"args_string":"(builder : ::YAML::Nodes::Builder)","args_html":"(builder : ::YAML::Nodes::Builder)","location":{"filename":"src/yaml/serializer.cr","line_number":15,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/serializer.cr#L15"},"def":{"name":"new","args":[{"name":"builder","external_name":"builder","restriction":"::YAML::Nodes::Builder"}],"visibility":"Public","body":"_ = allocate\n_.initialize(builder)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(io:IO,&:Serializer->):Nil-class-method","name":"new","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO, & : Serializer -> ) : Nil","args_html":"(io : IO, & : <a href=\"../../Crystalizer/YAML/Serializer.html\">Serializer</a> -> ) : Nil","location":{"filename":"src/yaml/serializer.cr","line_number":18,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/serializer.cr#L18"},"def":{"name":"new","args":[{"name":"io","external_name":"io","restriction":"IO"}],"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(Serializer ->)"},"return_type":"Nil","visibility":"Public","body":"nodes_builder = ::YAML::Nodes::Builder.new\nyield new(nodes_builder)\n::YAML.build(io) do |builder|\n  nodes_builder.document.to_yaml(builder)\nend\n"}}],"instance_methods":[{"html_id":"serialize(object:Crystalizer::Type)-instance-method","name":"serialize","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"Crystalizer::Type"}],"args_string":"(object : Crystalizer::Type)","args_html":"(object : <a href=\"../../Crystalizer/Type.html\">Crystalizer::Type</a>)","location":{"filename":"src/yaml/serializer.cr","line_number":13,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/serializer.cr#L13"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":"Crystalizer::Type"}],"visibility":"Public","body":"object.serialize(self)"}},{"html_id":"serialize(object:Crystalizer::Any)-instance-method","name":"serialize","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"Crystalizer::Any"}],"args_string":"(object : Crystalizer::Any)","args_html":"(object : <a href=\"../../Crystalizer/Any.html\">Crystalizer::Any</a>)","location":{"filename":"src/yaml/serializer.cr","line_number":41,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/serializer.cr#L41"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":"Crystalizer::Any"}],"visibility":"Public","body":"serialize(object.raw)"}},{"html_id":"serialize(object:::YAML::Serializable)-instance-method","name":"serialize","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"::YAML::Serializable"}],"args_string":"(object : ::YAML::Serializable)","args_html":"(object : ::YAML::Serializable)","location":{"filename":"src/yaml/serializer.cr","line_number":45,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/serializer.cr#L45"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":"::YAML::Serializable"}],"visibility":"Public","body":"object.to_yaml(@builder)"}},{"html_id":"serialize(hash:Hash)-instance-method","name":"serialize","abstract":false,"args":[{"name":"hash","external_name":"hash","restriction":"Hash"}],"args_string":"(hash : Hash)","args_html":"(hash : Hash)","location":{"filename":"src/yaml/serializer.cr","line_number":49,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/serializer.cr#L49"},"def":{"name":"serialize","args":[{"name":"hash","external_name":"hash","restriction":"Hash"}],"visibility":"Public","body":"@builder.mapping(reference: hash) do\n  hash.each do |key, value|\n    serialize(key)\n    serialize(value)\n  end\nend"}},{"html_id":"serialize(array:Array|Deque|Set|Tuple)-instance-method","name":"serialize","abstract":false,"args":[{"name":"array","external_name":"array","restriction":"Array | Deque | Set | Tuple"}],"args_string":"(array : Array | Deque | Set | Tuple)","args_html":"(array : Array | Deque | Set | Tuple)","location":{"filename":"src/yaml/serializer.cr","line_number":58,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/serializer.cr#L58"},"def":{"name":"serialize","args":[{"name":"array","external_name":"array","restriction":"Array | Deque | Set | Tuple"}],"visibility":"Public","body":"@builder.sequence(reference: (array.is_a?(Array) ? array : nil)) do\n  array.each do |value|\n    serialize(value)\n  end\nend"}},{"html_id":"serialize(named_tuple:NamedTuple)-instance-method","name":"serialize","abstract":false,"args":[{"name":"named_tuple","external_name":"named_tuple","restriction":"NamedTuple"}],"args_string":"(named_tuple : NamedTuple)","args_html":"(named_tuple : NamedTuple)","location":{"filename":"src/yaml/serializer.cr","line_number":66,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/serializer.cr#L66"},"def":{"name":"serialize","args":[{"name":"named_tuple","external_name":"named_tuple","restriction":"NamedTuple"}],"visibility":"Public","body":"@builder.mapping do\n  named_tuple.each do |key, value|\n    serialize(key)\n    serialize(value)\n  end\nend"}},{"html_id":"serialize(bool:Bool)-instance-method","name":"serialize","abstract":false,"args":[{"name":"bool","external_name":"bool","restriction":"Bool"}],"args_string":"(bool : Bool)","args_html":"(bool : Bool)","location":{"filename":"src/yaml/serializer.cr","line_number":75,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/serializer.cr#L75"},"def":{"name":"serialize","args":[{"name":"bool","external_name":"bool","restriction":"Bool"}],"visibility":"Public","body":"@builder.scalar(bool)"}},{"html_id":"serialize(object:Enum)-instance-method","name":"serialize","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"Enum"}],"args_string":"(object : Enum)","args_html":"(object : Enum)","location":{"filename":"src/yaml/serializer.cr","line_number":79,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/serializer.cr#L79"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":"Enum"}],"visibility":"Public","body":"serialize_enum(object)"}},{"html_id":"serialize(null:Nil)-instance-method","name":"serialize","abstract":false,"args":[{"name":"null","external_name":"null","restriction":"Nil"}],"args_string":"(null : Nil)","args_html":"(null : Nil)","location":{"filename":"src/yaml/serializer.cr","line_number":95,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/serializer.cr#L95"},"def":{"name":"serialize","args":[{"name":"null","external_name":"null","restriction":"Nil"}],"visibility":"Public","body":"@builder.scalar(\"\")"}},{"html_id":"serialize(object:Number|Path|String|Symbol)-instance-method","name":"serialize","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"Number | Path | String | Symbol"}],"args_string":"(object : Number | Path | String | Symbol)","args_html":"(object : Number | Path | String | Symbol)","location":{"filename":"src/yaml/serializer.cr","line_number":99,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/serializer.cr#L99"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":"Number | Path | String | Symbol"}],"visibility":"Public","body":"@builder.scalar(object.to_s)"}},{"html_id":"serialize(slice:Slice(UInt8))-instance-method","name":"serialize","abstract":false,"args":[{"name":"slice","external_name":"slice","restriction":"Slice(UInt8)"}],"args_string":"(slice : Slice(UInt8))","args_html":"(slice : Slice(UInt8))","location":{"filename":"src/yaml/serializer.cr","line_number":103,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/serializer.cr#L103"},"def":{"name":"serialize","args":[{"name":"slice","external_name":"slice","restriction":"Slice(UInt8)"}],"visibility":"Public","body":"@builder.scalar(Base64.encode(slice), tag: \"tag:yaml.org,2002:binary\")"}},{"html_id":"serialize(time:Time)-instance-method","name":"serialize","abstract":false,"args":[{"name":"time","external_name":"time","restriction":"Time"}],"args_string":"(time : Time)","args_html":"(time : Time)","location":{"filename":"src/yaml/serializer.cr","line_number":107,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/serializer.cr#L107"},"def":{"name":"serialize","args":[{"name":"time","external_name":"time","restriction":"Time"}],"visibility":"Public","body":"@builder.scalar(Time::Format::YAML_DATE.format(time))"}},{"html_id":"serialize(object:O):NilforallO-instance-method","name":"serialize","abstract":false,"args":[{"name":"object","external_name":"object","restriction":"O"}],"args_string":"(object : O) : Nil forall O","args_html":"(object : O) : Nil forall O","location":{"filename":"src/yaml/serializer.cr","line_number":32,"url":"https://github.com/j8r/crystalizer/blob/46b9d4a9eb49c7d1e95c589a99b8688cadcbef8f/src/yaml/serializer.cr#L32"},"def":{"name":"serialize","args":[{"name":"object","external_name":"object","restriction":"O"}],"return_type":"Nil","visibility":"Public","body":"@builder.mapping do\n  Crystalizer.each_ivar(object) do |key, value|\n    de_unionize(key)\n    de_unionize(value)\n  end\nend"}}]}]}]}]}})